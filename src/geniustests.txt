OPTIONS		--maxdigits=12
31.4 + 36.9 + 15.2 + 16.5					100
31.4 + 36.9 + 15.2 + 16.51					100.01
atan(1)								0.785398163397
4+5								9
4+3*2								10
7/1								7
pi-pi								0
3==1								0
9==(4+5)							1
4<5								1
7>8								0
if pi then 1							1
(if 0 then 1)+1							((null)+1)
(if 3 then 1)+1							2
if 66 then 4 else 5						4
if 0 then 4 else 5						5
a=1								1
a=1;a								1
a=2;a=a+1;a							3
a=1;b=&a;b							(&a)
a=1;b=&a;c=b;c							(&a)
a=1;b=&a;*b							1
a=1;b=&a;a=3;*b							3
a=1;b=&a;c=b;a=3;*c						3
a=1;b=&a;c=b;*c=2;a						2
t=4;if(t>3)then(4)else(3)					4
t=2;if(t>3)then(4)else(3)					3
t=3;if(t>3)then(4)else(3)					3
function t(x) = x+1; t(1)					2
function f(x) = if(x<=1)then 1 else (f(x-1)*x); f(10)		3628800
function f2(x) = (r=x;while(x>1)do(x=x-1;r=r*x);r);f2(10)	3628800
function g(x)=(function r(a)=(a*2); x+r(x)); g(5)		15
g = `(x)=(function r(a)=(a*2); x+r(x)); g(5)			15
function f(a,b,c)=(a+b+c);f(1,2,3)				6
function f(a,b)=(b(a)+1);f(3,`(x)=(x*2))			7
function f(a,b,c)=(b(a)+c(a));f(3,`(x)=(x*2),`(y)=(y+1))	10
t=1;function f(x,y)=(*x=y);f(&t,2);t				2
t=1;function f(x)=(*x=7);f(&t);t				7
t=1;function f(x)=(if(*x>0)then(*x=7)else(*x=8));f(&t);t	7
t=0;function f(x)=(if(*x>0)then(*x=7)else(*x=8));f(&t);t	8
t=0;function f(x)=(if(*x>0)then(*x=7));f(&t);t			0
t=1;a=&t;*a=2;t							2
function f(x)=(x+1);t=&f;*t(2)					3
function f(x,y)=(x+y);t=&f;*t(2,3)				5
function f(x)=(x+1);t=&f;function f(x)=(x*2);*t(2)		4
function f(a)=(*a(2)+1);function t(x)=(x+1);f(&t)		4
function sum1(a,b)=a(b)+a(b+1);function blah(x)=x^4;sum1(blah,6)	3697
function sum1(a,b)=a(b)+a(b+1);sum1(`(x)=x^4,6)			3697
(5/0)!								((5/0)!)
5/0								(5/0)
4-7								-3
function t2(a)=(a=a+1;a);t2(2)					3
function t2(a)=(a=a+1;a);t2(2)/2				1 1/2
4+2/3								4 2/3
10.1!								(10.1!)
4^(4/3)								6.34960420787
4.0^(4/3)							6.34960420787
4^2.1								18.37917368
4.0^2.1								18.37917368
(78+8467i)*(-88754+8784i)					-81296940-750794966i
3i+3								3+3i
3i*3								9i
3i/3								1i
3/3i								-1i
sqrt(-1)							1i
OPTIONS		--maxdigits=0
50!	30414093201713378043612608166064768844377641568960512000000000000
function t()=(1+2);t						(`()=(3))
function t()=(1+2);t+3						((`()=(3))+3)
function t()=(1+2);a=t+3;a					((`()=(3))+3)
function t()=(1+2);a=t+3;a()					((`()=(3))+3)
function t()=(g=1;g=g+1;g);t()					2
t = `()=(g=1;g=g+1;g);t()					2
function t(x)=(if(x)then(t(x-1))else(0));t(5)+t(4)		0
function t(x)=(function t(x)=(x+1);t(x)+1);t(3)			5
function t(x)=(function t(x,y)=(x+y);t(x,2));t(5)		7
1#4								1
print(5);5+1;.							5
print(5);5+1;							5
.+1								((null)+1)
if(5/0)then(1)							(if (5/0) then 1)
k=5;while((20/k)>1)do(k=k-1)					(while ((20/0)>1) do (k=(k-1)))
t=50;while(t>0)do(t=t-1);t					0
t=50;while(t>1)do(t=t-1);t					1
t=50;b=0;while(t>0)do(t=t-1;b=b+1);b				50
t=0;until(t==50)do(t=t+1);t					50
t=0;do t=t+1 while 0;t						1
t=0;do t=t+1 while t<5;t					5
t=0;do t=t+1 until 1;t						1
t=0;do t=t+1 until t==3;t					3
1;return 3;5							3
function f(x) =(if(x<=0) then return x; return(f(x-1)));f(5)	0
gcd(6813840,5836160)						880
gcd(6813840,5836160,1760)					880
gcd([6813840,5836160,1760])					880
gcd(880*7743,880*6632)						880
gcd(4)								4
gcd(-4)								4
gcd(0,0,0,0)							0
gcd(0,2,0,0)							2
gcd(0,-2,0,0)							2
gcd([0,2,0,0])							2
gcd(-4,3)							1
gcd(77438,723654)						2
lcm(12,2)							12
lcm(12)								12
lcm(12,9)							36
lcm(12,9,9)							36
lcm(12,9,9,3)							36
lcm([12,9,9,3])							36
lcm(2,3)							6
lcm(-2,-3)							6
lcm(2,-3)							6
lcm(-3)								3
|-5+|-4||							1
|4|								4
a=-74;|a|							74
|[1,2,-4]|							[1,2,4]
round(0)							0
round(0.3)							0
round(0.5)							1
round(2.4)							2
round(2.7)							3
round(-3.1)							-3
round(5/4)							1
round(42.0)							42
floor(0)							0
floor(0.3)							0
floor(2.4)							2
floor(-3.1)							-4
floor(5/4)							1
floor(42.0)							42
ceil(0)								0
ceil(0.3)							1
ceil(2.4)							3
ceil(-3.1)							-3
ceil(5/4)							2
ceil(42.0)							42
max(1,2)							2
min(2,1)							1
max(1,2,3)							3
max(1,2,3,1)							3
min(2,1,3)							1
max(2)								2
min(2)								2
min([1,2,3,2])							1
min([2,1;3,2])							1
max([1,2,3,2])							3
max([1,2;3,2])							3
min(1.3,5/4)							1 1/4
max(1.3,5/4)							1.3
max(1.3,1.3)							1.3
min(1.3,1.3)							1.3
min(-1.3,1.3)							-1.3
min(3i,5)							(min(3i,5))
max([1,2,3],2)							[2,2,3]
min([1,2,3],2)							[1,2,2]
prod k=2 to 4 do k+1						60
sum n=2 to 4 do n+1						12
prod k in [2,3,4] do k+1					60
sum n in [2,3,4] do n+1						12
sum n in ["2",3,4] do n						"234"
sum n in [1] do n						1
prod n in [1] do n						1
sum n=1 to 1 do n						1
prod n=1 to 1 do n						1
a=[1,2;3,4];[a,5;6,7]						[1,2,5;3,4,5;6,6,7]
[1,2]								[1,2]
a=[1;2];[a,3]							[1,3;2,3]
a=[1,2];[a;[3,4,5]]						[1,2,1;3,4,5]
[1;[2,3]]							[1,1;2,3]
a=[1,2;3,4];a@(1,2)						2
a=[1,2;3,4];a@(2,2)						4
a=[1,2;3,4];a@(2,3)						([1,2;3,4]@(2,3))
[1,2;3,4]@(2,1)							3
IsInteger(4)							1
IsInteger(3/4)							0
IsRational(3/4)							1
IsRational(3.1)							0
IsRational(3)							1
IsComplex(3i)							1
IsComplex(3)							0
IsFloat(3.1)							1
IsFloat(3)							0
I(4)								[1,0,0,0;0,1,0,0;0,0,1,0;0,0,0,1]
I(0)								(I(0))
lcm(4,6)							12
function f(x)=(if(not IsInteger(x)) then bailout else 1);f(1.2)	(f(1.2))
function f(x)=(if(not IsInteger(x)) then bailout else 1);f(100)	1
prime(10)							29
MaxDigits=12;exp(3*ln(2))					8
if(0)then 1;0							0
24/2								12
a@(1,2)=3;a							[0,3]
a@(2,2)=3;a							[0,0;0,3]
a@(,2)=[1;2;3];a						[0,1;0,2;0,3]
[1,2;3,4]@(,2)							[2;4]
[1,2;3,4]@(1,)							[1,2]
[1,2;3,4]@(2,)							[3,4]
a=[1,2;3,4];a@(2,)=[5,6];a					[1,2;5,6]
a=[1,2;3,4];a@(2,)=5;a						[1,2;5,5]
a@(1,1)=&d;a							[(&d)]
if(1 and 1) then 1 else 0					1
if(0 and 1) then 1 else 0					0
if("blah" and 1) then 1 else 0					1
if("" and 1) then 1 else 0					0
if("" or 1) then 1 else 0					1
if("" xor 1) then 1 else 0					1
if(1 xor 1) then 1 else 0					0
if(not 1) then 1 else 0						0
if(not "") then 1 else 0					1
"abc"+"def"							"abcdef"
a=3;"abc "+3+" def"						"abc 3 def"
a=[1,2,3;4,5,6];"abc: "+a					"abc: [1,2,3;4,5,6]"
if("AHA"=="AHA") then 1 else 0					1
if("AHA "=="AHA") then 1 else 0					0
not &d								(not (&d))
3i>3i								(3i>3i)
not 3i								(not 3i)
if(3=="3")then 1 else 0						1
if(3=="3 ")then 1 else 0					0
IsNull(1)							0
IsNull(.)							1
[1,2;3,4]+[5,6;7,8]						[6,8;10,12]
["ABC","DEF","GHI"]+["GGG","HHH","III"]				["ABCGGG","DEFHHH","GHIIII"]
[1,2;3,4]*2							[2,4;6,8]
[1,2]*[3;4]							[11]
[1,2;3,4]*[5,6;7,8]						[19,22;43,50]
[1,2]'								[1;2]
[1,2i]'								[1;-2i]
[1,2i].'							[1;2i]
[1,2;3,4]'							[1,3;2,4]
1'								(1')
[1,2]*[3,4]'							[11]
AddPoly([1,1,2],[0,1])						[1,2,2]
SubtractPoly([1,1,2],[0,1])						[1,0,2]
TrimPoly([1,1,0])						[1,1]
TrimPoly([0,0,0])						[0]
PolyToString([2,-1,2,3],"x")					"3*x^3 + 2*x^2 - x + 2"
PolyToString([3,-1,1,-1],"x")					"-x^3 + x^2 - x + 3"
PolyToString([0,0,0,1],"x")					"x^3"
IsPoly([0,1,2,3])						1
IsPoly([0,1,2,3;1])						0
IsPoly([0,1,2,&d])						0
PolyToString(MultiplyPoly([1,1],[1,1]),"x")				"x^2 + 2*x + 1"
PolyToString(MultiplyPoly([-1,1],[1,1]),"x")				"x^2 - 1"
f=PolyToFunction([3,1,1]);f(2)					9
IsFunction(`(x)=x+1)						1
IsFunction(function(x)=x+1)					1
IsFunction(1)							0
a=`(x)=(x+1);b=&a;IsFunctionRef(b)				1
IsFunctionRef(1)						0
k=0;a=0;b=0;while(k<20)do(k=k+1;b=1;continue;a=2);[a,b]		[0,1]
k=0;a=0;b=0;while(k<20)do(k=k+1;b=1;break;a=2);[a,b]		[0,1]
break
a=0;1 or a=1;a							0
rref(I(5))@(,5)@(5,)@(1,1)					1
trace([1,2,3;4,5,6;7,8,9])					15
ref([0,0,-2,0,7,12;2,4,-10,6,12,28;2,4,-5,6,-5,-1])		[1,2,-5,3,6,14;0,0,1,0,-3 1/2,-6;0,0,0,0,1,2]
rref([0,0,-2,0,7,12;2,4,-10,6,12,28;2,4,-5,6,-5,-1])		[1,2,0,3,0,7;0,0,1,0,0,1;0,0,0,0,1,2]
ref([1,2,3;0,0,0;0,0,3])					[1,2,3;0,0,1;0,0,0]
-5/-5								1
rref([1,2,3;2,4,6])						[1,2,3;0,0,0]
[2,I(2),3]							[2,1,0,3;2,0,1,3]
[I(2),3;4,5]							[1,0,3;0,1,3;4,4,5]
[[2;3;4],I(2)]							[2,1,0;3,0,1;4,1,0]
a@(1,&f)=1							((a@(1,(&f)))=1)
a=[1,2;3,4];a@(,2)=[1,2]					((a@[,2])=[1,2])
a=[1,2;3,4];a@(,2)=[7,8]';a					[1,7;3,8]
a=[1,2;3,4];a@(2,)=[7;8]';a					[1,2;7,8]
a=[1,2;3,4];a@(3:1,1:2)						([1,2;3,4]@(`[3,2,1],`[1,2]))
I(3)@(2:3,)							[0,1,0;0,0,1]
a@(2:3,2:3)=[1,2;3,4];a						[0,0,0;0,1,2;0,3,4]
a@(2:3,)=[1,2;3,4];a						[0,0;1,2;3,4]
a@(,2:3)=[1,2;3,4];a						[0,1,2;0,3,4]
a=[1,2,3;4,5,6;7,8,9];[a@(1:1,1:1),a@(1,3);a@(3,1),a@(3,3)]	[1,3;7,9]
a=[1,2,3;4,5,6;7,8,9];a@(1:2,2:3)				[2,3;5,6]
a=[1,2,3;4,5,6;7,8,9];a@(1,1:3)					[1,2,3]
a=[1,2,3;4,5,6;7,8,9];a@(1:3,2)'				[2,5,8]
a=[1,2;3,4];a@(2:3,2)=[5,6]';a					[1,2;3,5;0,6]
a=[1,2;3,4];a@(2:3,2:3)=[5,6;7,8];a				[1,2,0;3,5,6;0,7,8]
b@(4:8,3)=[1,2,3,4]'						((b@(`[4,5,6,7,8],3))=[1;2;3;4])
b@(2:3,2)=[1,2]';b						[0,0;0,1;0,2]
(k=0;while(k<3) do (k=k+1;))+1					((null)+1)
(k=0;while(k<3) do (k=k+1))+1					4
a=[1,2];SetMatrixSize(a,2,1)					[1;0]
a=[1,2];SetMatrixSize(a,2,1);a					[1,2]
a=[1,2,3;4,5,6];a=SetMatrixSize(a,2,2);a			[1,2;4,5]
a=[1,2,3;4,5,6];a=SetMatrixSize(a,3,2);a			[1,2;4,5;0,0]
IsPerfectSquare(9)						1
IsPerfectSquare(8)						0
IsPerfectPower(27)						1
MatrixSum([3,4;5])						12
MatrixProduct([2,3,4])						24
ConvolutionVector([2,3,4],[5,6,7])				[14,18,20]
convol([2,3,4],[5,6,7])						52
Convolution([2,3,4],[5,6,7])					52
MatrixSum(ConvolutionVector([2,3,4],[5,6,7]))			52
prime([1,2,3,4,5,6,7,8,9])					[2,3,5,7,11,13,17,19,23]
min([4,2,6],[2,5,1])						[2,2,1]
max([4,2,&d],[2,5,1])						[4,5,(max((&d),1))]
max([4,2,1],&d)							[(max(4,(&d))),(max(2,(&d))),(max(1,(&d)))]
max(&d,[4,2,1])							[(max((&d),4)),(max((&d),2)),(max((&d),1))]
MaxDigits=12;log([1000,9],[10,3])				[3,2]
MaxDigits=12;log10([100,1000])					[2,3]
IsMatrix(log([1,1000,9],[10,3]))				0
MaxDigits=27;log([27,9],3)					[3,2]
sqrt(-9)							3i
cos(3*pi)							-1
cos(2*pi)							1
cos(pi)								-1
for k = 1 to 3 do k						3
print(for k = 4 to 3 do k)					(null)
(for k = 4 to 3 do k);k						4
a=0;(for k = 3 to 3 do a=a+1);a					1
a=0;for k = 3 to 3 do a=a+1;a					1
a=0;for k = 1 to 3 by 2 do a=a+1;a				2
a=0;for k = 1 to 2 by 2 do a=a+1;a				1
for k = 1 to 2 by 2 do .;k					1
[Catalan(3),Catalan(4),Catalan(5)]				[5,14,42]
Catalan([3,4,5])						[5,14,42]
Catalan(-1)							(Catalan(-1))
for k = &d to 4 do .						(for k = (&d) to 4 do (null))
for k = 1 to 10 by &a do .					(for k = 1 to 10 by (&a) do (null))
print(null)							(null)
det([3,1;4,-2])							-10
det([1,2,3;-4,5,6;7,-8,9])					240
det([1,2,3;4,5,6])						(det([1,2,3;4,5,6]))
diag([1,2])							[1,0;0,2]
det([1,0,0,3;2,7,0,6;0,6,3,0;7,3,1,-5])				-546
det([1,3,-2,4;0,0,0,0;3,9,1,5;1,1,4,8])				0
"abc"!="abc"							0
"Zbc"!="abc"							1
[0]==0								1
[0]==[0]							1
[0,0]==[0]							0
[0,1;2,3]==[0,1;2,3]						1
[0,1;2,3]!=[0,1;2,3]						0
[0,0;2,3]!=[0,1;2,3]						1
[&d]==[1]							([(&d)]==[1])
sum n=2 to 4 do prime(n)					15
sin								(<builtin function>)
a=prime;a(3)							5
"abc"<"abcd"							1
"abce"<"abcd"							0
"abce">"abcd"							1
4<5<6								1
4<5<=6								1
4<5<=5								1
4<5<=4								0
5<5<=5								0
5==5<=5								1
5==5<=6								1
5>=5>=6								0
7>=5>=2								1
4>=5>=2								0
9>3<4>3<=5>2<=2							1
2>3<2								0
(2>3)<2								1
t=0;for k in [1,2,3;4,5,6;7,8,9] do t=t+k;t			45
t=0;for k in 3 do t=t+k;t					3
for k in [1,2,3] do k						3
for n in &d do .						(for n in (&d) do (null))
RowMedian([1,2,2,3;1,2,3,4;2,2,2,2;2,2,3,2])			[2;2 1/2;2;2]
Median([1,2,3])							2
Median([1,4,2,3])						2 1/2
SortVector([1,2,2,3,1,2,3,4,2,2,2,2,2,2,3,2])			[1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,4]
[1,2,3;4,5,6;7,8,8]^-2						[17,-20 2/3,9;-25 1/3,31 2/3,-14;10 1/3,-13 1/3,6]
[1,2,3;4,5,6;7,8,8]^4						[6981,8598,9597;15876,19557,21834;23273,28672,32014]
[1,2;3,4]^5							[1069,1558;2337,3406]
[1,2;2,4]^-1							([1,2;2,4]^(-1))
a=[1,2;3,4];1/a							[-2,1;1 1/2,-1/2]
a=[1,2;3,4];a/2							[1/2,1;1 1/2,2]
2/[1,2]								(2/[1,2])
a=[1,2;3,4];b=[8,2;4,4];a/b					[-1/6,7/12;-1/6,1 1/12]
a=[1,2;3,4];|1/a|						[2,1;1 1/2,1/2]
(5/0)<3<2							((5/0)<3<2)
adj([3,2,-1;1,6,3;2,-4,0])					[12,4,12;6,2,-10;-16,16,16]
a=[2,31,2;12,37,2;8,2,1];adj(a)/det(a)==a^-1			1
adj([1,2])							(adj([1,2]))
f=SetMatrixSize([0],12,3);g=SetMatrixSize([0],36,1);function bb(g,h)=rows(*h);bb(f,&g)		36
[1,2,4;2,6,0]*[4,1,4,3;0,-1,3,1;2,7,5,2]			[12,27,30,13;8,-4,26,12]
c=[1,2];c@(3)=3;c						[1,2,3]
c=[1;2];c@(3)=3;c						[1;2;3]
b=[1,2,3;4,5,6;7,8,10];b@(9)					10
b=[1,2,3;4,5,6;7,8,10];b@(10)					([1,2,3;4,5,6;7,8,10]@(10))
b=[1,2,3;4,5,6;7,8,10];b@(10)=99;b				[1,2,3;4,5,6;7,8,10;99,0,0]
a@(3)=9;a							[0,0,9]
(adj(Pascal(10)^-1)^-1)*Pascal(10)==I(11)			1
Pascal(3)							[1,0,0,0;1,1,0,0;1,2,1,0;1,3,3,1]
+1								1
---+-+++-+++-+-+-+3						3
2/4								1/2
2000000000000000000000000/4000000000000000000000000		1/2
`[[1;2],3]							`[[1;2],3]
`[[2/2;2],4-1]							`[[1;2],3]
`[[2/2;2;1],[4-1,2]]						`[[1;2;1],[3,2]]
5^-1								1/5
5^-2								1/25
5.0^-1								0.2
1E+02								100
7+8 mod 3							0
-3 mod 5							2
1^(-1)								1
[1]^1								[1]
[1]^0								[1]
a=Pascal(4);b=ComplementSubmatrix(a,5,1);b=ComplementSubmatrix(a,5,1);rows(b)	4
3 4/5								3 4/5
4 6/5								5 1/5
991/8								123 7/8
MixedFractions=0 ; 123 7/8					991/8
010								8
0100								64
8\100								64
IntegerOutputBase=16 ; 256					0x100
IntegerOutputBase=9 ; 81					9\100
IntegerOutputBase=12 ; 11					12\b
c=[2,3;4,5];c+2;c						[2,3;4,5]
c=[2,3;4,5];c*c;c						[2,3;4,5]
c=[2,3;4,5];c^-1;c						[2,3;4,5]
Numerator(2/3)							2
Denominator(2/3)						3
Denominator(1.2)						(Denominator(1.2))
fib(7)								13
fib(7);fib(7)							13
q=5; function f(x) = ( q = 6; set(`q,x); q) ; f(10)		6
q=5; function f(x) = ( q = 6; set(`q,x); q) ; f(10) ; q		10
l=9 ; if (l=9) then 1						1
l=9 ; if (l=10) then 1 else 2					2
l=9 ; if (l=10) then 1 else 2 ; l				9
A=[1,2;3,4];B=A+4;[A,0;0,B]					[1,2,0,0;3,4,0,0;0,0,5,6;0,0,7,8]
sum n in ColumnsOf([1,2;3,4]) do n				[3;7]
sum n in RowsOf([1,2;3,4]) do n					[4,6]
function f(x) = `(l) = x+l; k=f(2);k(11)			13
function f(a,b,c...) = c ; f()					(f())
function f(a,b,c...) = c ; f(1)					(f(1))
function f(a,b,c...) = c ; f(1,2)+1				((null)+1)
function f(a,b,c...) = c ; f(1,2,3)				[3]
function f(a,b,c...) = c ; f(1,2,3,4)				[3,4]
function f(c...) = c ; f()+1					((null)+1)
function f(c...) = c ; f(1)					[1]
function f(c...) = c ; f(1,2)					[1,2]
0!								1
(-1)!								((-1)!)
(-1)!!								((-1)!!)
-1!								-1
-1!!								-1
0!!								1
8!!								384
15!!								2027025
DoubleFactorial(8)						384
[1,2]./[4,5]							[1/4,2/5]
MixedFractions=0; [1,2].\[4,5]					[4,5/2]
[1,2].*[4,5]							[4,10]
[1,2].^[4,5]							[1,32]
[4,2].%[3,5]							[1,2]
Norm([3,4])							5
InfNorm([3,4])							4
UpperTriangular([1,2;3,4])					[1,2;0,4]
LowerTriangular([1,2;3,4])					[1,0;3,4]
parameter foo=1;function h(x)=(foo=x);h(7);foo			7
IsMatrixInteger (randint (5,5,5))				1
IsMatrixInteger (randint (5,5,5));IsMatrixInteger (rand (5,5))	0
IsMatrixInteger (rand (5,5))					0
IsMatrixReal (rand (5,5))					1
A=[1,2;3,4];A@(2:1,2:1)						[4,3;2,1]
A=[1,2;3,4];A@([1,1],2)						[2;2]
A=[1,2;3,4];B=A@([1,1],2);B@(1,1)=8;B				[8;2]
A=[1,2;3,4];B=A@([1,1],2);B@(1,1)=8;A				[1,2;3,4]
IndexComplement (8:2,4)						(IndexComplement(`[8,7,6,5,4,3,2],4))
IndexComplement (3:2,4)						`[1,4]
IndexComplement ([2,2,2,3,2],4)					[1,4]
IndexComplement ([1],1)+1					((null)+1)
IndexComplement (3,4)						`[1,2,4]
IndexComplement (1,1)+1						((null)+1)
function w(h) = (function a(x) = h+x ; a) ; w(7) call (3)	10
function w(h) = (function a(x) = h+x ; a(7)) ; w(7)		14
3 mod 2								1
[3,2] mod 2							[1,0]
279/361 mod 676							115
1/11 mod 3							2
234234 mod -8							(234234 mod -8)
-1 mod 4							3
10^-1 mod 23							7
1/10 mod 23							7
IsPrime(7)							1
IsPrime(8)							0
NextPrime(23)							29
NextPrime(28)							29
function f(x) = 3*x + 4 mod 11 ; f(8)				6
10:2:14								`[10,12,14]
10:-1:8								`[10,9,8]
10:88:2								(10:88:2)
A=[1,2;3,4];B=A^-1 mod 5					[3,1;4,2]
A=[1,2;3,4];A^-1 * A mod 5					[1,0;0,1]
Factorize(15)							[1,3,5;1,1,1]
Factors(15)							[1,3,5,15]
Factors(-15)							[-1,1,3,5,15]
Factors(0)+1							((null)+1)
PrimeFactors(15)						[3,5]
MaximalPrimePowerFactors(15)					[3,5]
MaximalPrimePowerFactors(75)					[3,25]
MaximalPrimePowerFactors(0)					(MaximalPrimePowerFactors(0))
PrimeFactors(0)							(PrimeFactors(0))
PrimeFactors(3+2i)						(PrimeFactors((3+2i)))
PrimeFactors(-4)						(PrimeFactors(-4))
EulerPhi(365)							288
EulerPhi(15)							8
EulerPhi(13)							12
EulerPhi(-4)							(EulerPhi(-4))
464104705^201934721 mod 536813567				45005201
Numerator (3i/7)						3i
Numerator (3i/7+1)						7+3i
Denominator (3i/7)						7
Denominator (3i/7+1)						7
(64^(1/2))/7							1 1/7
-1^2								1
(-1)^2								1
a=1;-a^2							-1
a=1;(-a)^2							1
(78125^(1/7))/101						5/101
(78125^(2/7))/101						25/101
((78125/(2^7))^(2/7))/101					25/404
((1/78125)^(2/7))						1/25
[null,1,2]							[1,2]
[1,null,2]							[1,2]
[1,2,null]							[1,2]
[[1;2],3,null]							[1,3;2,3]
[[1;null],3]							[1,3]
[1;2,null]							[1;2]
[1,0;2,null]							[1,0;2,0]
[null,[1;2]]							[1;2]
[null,[1;2],3]							[1,3;2,3]
StringToASCII ("sdfsdf")					[115,100,102,115,100,102]
ASCIIToString ([115,100,102,115,100,102])			"sdfsdf"
StringToASCII ("")+1						((null)+1)
ASCIIToString (null)						""
AlphabetToString ([1,2,3],"abcd")				"bcd"
AlphabetToString (null,"abcd")					""
StringToAlphabet ("bbc","abcd")					[1,1,2]
StrongPseudoprimeTest(17,2)					1
StrongPseudoprimeTest(3215031751,2)				1
IsStrongPseudoprime(17,2)					0
PseudoprimeTest(17,2)						1
IsPseudoprime(17,2)						0
IsPseudoprime(91,3)						1
IsStrongPseudoprime(91,3)					0
IsStrongPseudoprime(3215031751,2)				1
IsStrongPseudoprime(3215031751,3)				1
StrongPseudoprimeTest(3215031751,11)				0
IsPseudoprime(341,2)						1
-[1,2] mod 3							[2,1]
DiscreteLog(153,2,181)						107
DiscreteLog(13,6,229)						117
log(153,2) mod 181						107
log(13,6) mod 229						117
log(10)==ln(10)							1
log(1,2,3)							(log(1,2,3))
sum n in null do n						0
prod n in null do n						1
i=0;for n in null do i=i+1 ; i					0
i=0;for n in [1,2,3] do i=i+1 ; i				3
MakeSet([1,3,1,2,2])						[1,3,2]
Intersection([1,3,2],[3,1,8])					[1,3]
IsIn(4,[1,2,3,4])						1
IsIn(5,[1,2,3,4])						0
SqrtModPrime(8,127)						[32,95]
SqrtModPrime(7,127)+1						((null)+1)
SortVector(SqrtModPrime(8,137))					[62,75]
SortVector(SqrtModPrime(23,193))				[71,122]
SqrtModPrime(22,149)						[52,97]
sqrt(22) mod 149						[52,97]
1i^2								-1
1i^3								-1i
1i^4								1
1i^5								1i
1i^5070602400912917605986812821505				1i
0.1^-1.0							10

# Category: Differential Equations
# Name: Fourier series for a half-sawtooth function

#
# The fourier series was precomputed by hand
#

# The Fourier series up to nth harmonic
function ffsn(x,n) = (
  (1/4) +
  sum k=1 to n do (
    (1/(k*pi)^2)*((-1)^k - 1) * cos(k*pi*x) + ((-1)^(k+1)/(k*pi)) * sin(k*pi*x)
  )
);

LinePlotWindow=[-2,2,-0.5,1.5];
LinePlotDrawLegends=false;

LinePlotClear();

# Draw the graph by hand to correctly draw the gap
LinePlotDrawLine([-2,0;-1,1],"thickness",2,"color","darkblue");
LinePlotDrawLine([-1,0;0,0;1,1],"thickness",2,"color","darkblue");
LinePlotDrawLine([1,0;2,0],"thickness",2,"color","darkblue");

# Wait for 1 second before starting with the Fourier series
wait(1);

# Do first 20 harmonics
for n=1 to 20 do (
  # compute values and put in a vector instead of using the built in function grapher
  v=null;
  for x=-2 to 2 by 0.003 do
    v=[v,[x,ffsn(x,n)]];

  # Freeze, Thaw makes the animation smoother
  PlotCanvasFreeze ();

  LinePlotClear ();

  # Draw the graph by hand to correctly draw the gap
  LinePlotDrawLine([-2,0;-1,1],"thickness",2,"color","darkblue");
  LinePlotDrawLine([-1,0;0,0;1,1],"thickness",2,"color","darkblue");
  LinePlotDrawLine([1,0;2,0],"thickness",2,"color","darkblue");

  # Plot the fourier series up to nth harmonic
  LinePlotDrawLine(v,"thickness",2,"color","darkgreen");

  PlotCanvasThaw();
);


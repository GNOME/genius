
    <para>
To get help on a specific function from the console type:
<programlisting>help FunctionName
</programlisting>
    </para>

    <sect1 id="genius-gel-function-list-commands">
      <title>Commands</title>
      <variablelist>
        <varlistentry id="gel-command-help">
         <term>help</term>
         <listitem>
          <synopsis>help</synopsis>
          <synopsis>help FunctionName</synopsis>
          <para>Print help (or help on a function/command).</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-command-load">
         <term>load</term>
         <listitem>
          <synopsis>load "file.gel"</synopsis>
          <para>Load a file into the interpretor.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-command-cd">
         <term>cd</term>
         <listitem>
          <synopsis>cd /directory/name</synopsis>
          <para>Change working directory.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-command-pwd">
         <term>pwd</term>
         <listitem>
          <synopsis>pwd</synopsis>
          <para>Change working directory.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-command-ls">
         <term>ls</term>
         <listitem>
          <synopsis>ls</synopsis>
          <para>List files in the current directory.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-command-plugin">
         <term>plugin</term>
         <listitem>
          <synopsis>plugin plugin_name</synopsis>
          <para>Load a plugin.</para>
         </listitem>
        </varlistentry>
      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-basic">
      <title>Basic</title>
      <variablelist>
        <varlistentry id="gel-function-Compose">
         <term>Compose</term>
         <listitem>
          <synopsis>Compose (f,g)</synopsis>
          <para>Compose two functions</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GetCurrentModulo">
         <term>GetCurrentModulo</term>
         <listitem>
          <synopsis>GetCurrentModulo</synopsis>
          <para>Get current modulo from the context outside the function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Identity">
         <term>Identity</term>
         <listitem>
          <synopsis>Identity (x)</synopsis>
          <para>Identity function, returns its argument</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IntegerFromBoolean">
         <term>IntegerFromBoolean</term>
         <listitem>
          <synopsis>IntegerFromBoolean (bval)</synopsis>
	  <para>
	    Make integer (0 for <literal>false</literal> or 1 for
	    <literal>true</literal>) from a boolean value.
	    <varname>bval</varname> can also be a number in which case a
	    non-zero value will be interpreted as <literal>true</literal> and
	    zero will be interpretted as <literal>false</literal>.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsBoolean">
         <term>IsBoolean</term>
         <listitem>
          <synopsis>IsBoolean (arg)</synopsis>
          <para>Check if argument is a boolean (and not a number)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsFunction">
         <term>IsFunction</term>
         <listitem>
          <synopsis>IsFunction (arg)</synopsis>
          <para>Check if argument is a function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsFunctionRef">
         <term>IsFunctionRef</term>
         <listitem>
          <synopsis>IsFunctionRef (arg)</synopsis>
          <para>Check if argument is a function reference</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsMatrix">
         <term>IsMatrix</term>
         <listitem>
          <synopsis>IsMatrix (arg)</synopsis>
          <para>Check if argument is a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsNull">
         <term>IsNull</term>
         <listitem>
          <synopsis>IsNull (arg)</synopsis>
          <para>Check if argument is a null</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsString">
         <term>IsString</term>
         <listitem>
          <synopsis>IsString (arg)</synopsis>
          <para>Check if argument is a text string</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsValue">
         <term>IsValue</term>
         <listitem>
          <synopsis>IsValue (arg)</synopsis>
          <para>Check if argument is a number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SetFunctionFlags">
         <term>SetFunctionFlags</term>
         <listitem>
          <synopsis>SetFunctionFlags (id,flags...)</synopsis>
          <para>Set flags for a function, currently "PropagateMod" and "NoModuloArguments"</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SetHelp">
         <term>SetHelp</term>
         <listitem>
          <synopsis>SetHelp (id,category,desc)</synopsis>
          <para>Set the category and help description line for a function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SetHelpAlias">
         <term>SetHelpAlias</term>
         <listitem>
          <synopsis>SetHelpAlias (id,alias)</synopsis>
          <para>Sets up a help alias</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-chdir">
         <term>chdir</term>
         <listitem>
          <synopsis>chdir (dir)</synopsis>
          <para>Changes current directory</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-display">
         <term>display</term>
         <listitem>
          <synopsis>display (str,expr)</synopsis>
          <para>Display a string and an expression</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-error">
         <term>error</term>
         <listitem>
          <synopsis>error (str)</synopsis>
          <para>Prints a string to the error stream</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-exit">
         <term>exit</term>
         <listitem>
          <synopsis>exit</synopsis>
          <para>Aliases: <function>quit</function></para>
          <para>Exits the program</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-false">
         <term>false</term>
         <listitem>
          <synopsis>false</synopsis>
          <para>Aliases: <function>False</function> <function>FALSE</function></para>
          <para>The false boolean value</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-manual">
         <term>manual</term>
         <listitem>
          <synopsis>manual</synopsis>
          <para>Displays the user manual</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-print">
         <term>print</term>
         <listitem>
          <synopsis>print (str)</synopsis>
          <para>Prints an expression</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-printn">
         <term>printn</term>
         <listitem>
          <synopsis>printn (str)</synopsis>
          <para>Prints an expression without a trailing newline</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-protect">
         <term>protect</term>
         <listitem>
          <synopsis>protect (id)</synopsis>
          <para>Protect a variable from being modified</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-set">
         <term>set</term>
         <listitem>
          <synopsis>set (id,val)</synopsis>
          <para>Set a global variable.  The <varname>id</varname>
            can be either a string or a quoted identifier as follows.
	    For example:
	    <programlisting>set(`x,1)
	    </programlisting>
	    will set the global variable <varname>x</varname> to the value 1.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-string">
         <term>string</term>
         <listitem>
          <synopsis>string (s)</synopsis>
          <para>Make a string.  This will make a string out of any argument.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-true">
         <term>true</term>
         <listitem>
          <synopsis>true</synopsis>
          <para>Aliases: <function>True</function> <function>TRUE</function></para>
          <para>The true boolean value</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-unprotect">
         <term>unprotect</term>
         <listitem>
          <synopsis>unprotect (id)</synopsis>
          <para>Unprotect a variable from being modified</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-warranty">
         <term>warranty</term>
         <listitem>
          <synopsis>warranty</synopsis>
          <para>Gives the warranty information</para>
         </listitem>
        </varlistentry>
      </variablelist>

    </sect1>

    <sect1 id="genius-gel-function-parameters">
      <title>Parameters</title>
      <variablelist>
        <varlistentry id="gel-function-ChopTolerance">
         <term>ChopTolerance</term>
         <listitem>
          <synopsis>ChopTolerance = number</synopsis>
          <para>Tolerance of the Chop function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ContinuousNumberOfTries">
         <term>ContinuousNumberOfTries</term>
         <listitem>
          <synopsis>ContinuousNumberOfTries = number</synopsis>
          <para>How many iterations to try to find the limit for continuity and limits</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ContinuousSFS">
         <term>ContinuousSFS</term>
         <listitem>
          <synopsis>ContinuousSFS = number</synopsis>
          <para>How many successive steps to be within tolerance for calculation of continuity</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ContinuousTolerance">
         <term>ContinuousTolerance</term>
         <listitem>
          <synopsis>ContinuousTolerance = number</synopsis>
          <para>Tolerance for continuity of functions and for calculating the limit</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DerivativeNumberOfTries">
         <term>DerivativeNumberOfTries</term>
         <listitem>
          <synopsis>DerivativeNumberOfTries = number</synopsis>
          <para>How many iterations to try to find the limit for derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DerivativeSFS">
         <term>DerivativeSFS</term>
         <listitem>
          <synopsis>DerivativeSFS = number</synopsis>
          <para>How many successive steps to be within tolerance for calculation of derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DerivativeTolerance">
         <term>DerivativeTolerance</term>
         <listitem>
          <synopsis>DerivativeTolerance = number</synopsis>
          <para>Tolerance for calculating the derivatives of functions</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ErrorFunctionTolerance">
         <term>ErrorFunctionTolerance</term>
         <listitem>
          <synopsis>ErrorFunctionTolerance = number</synopsis>
          <para>Tolerance of the ErrorFunction</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FloatPrecision">
         <term>FloatPrecision</term>
         <listitem>
          <synopsis>FloatPrecision = number</synopsis>
          <para>Floating point precision</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FullExpressions">
         <term>FullExpressions</term>
         <listitem>
          <synopsis>FullExpressions = boolean</synopsis>
          <para>Print full expressions, even if more than a line</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GaussDistributionTolerance">
         <term>GaussDistributionTolerance</term>
         <listitem>
          <synopsis>GaussDistributionTolerance = number</synopsis>
          <para>Tolerance of the GaussDistribution function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IntegerOutputBase">
         <term>IntegerOutputBase</term>
         <listitem>
          <synopsis>IntegerOutputBase = number</synopsis>
          <para>Integer output base</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPrimeMillerRabinReps">
         <term>IsPrimeMillerRabinReps</term>
         <listitem>
          <synopsis>IsPrimeMillerRabinReps = number</synopsis>
          <para>Number of extra Miller-Rabin tests to run on a number before declaring it a prime in IsPrime</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MaxDigits">
         <term>MaxDigits</term>
         <listitem>
          <synopsis>MaxDigits = number</synopsis>
          <para>Maximum digits to display</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MaxErrors">
         <term>MaxErrors</term>
         <listitem>
          <synopsis>MaxErrors = number</synopsis>
          <para>Maximum errors to display</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MixedFractions">
         <term>MixedFractions</term>
         <listitem>
          <synopsis>MixedFractions = boolean</synopsis>
          <para>If true, mixed fractions are printed</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalIntegralFunction">
         <term>NumericalIntegralFunction</term>
         <listitem>
          <synopsis>NumericalIntegralFunction = function</synopsis>
          <para>The function used for numerical integration in NumericalIntegral</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalIntegralSteps">
         <term>NumericalIntegralSteps</term>
         <listitem>
          <synopsis>NumericalIntegralSteps = number</synopsis>
          <para>Steps to perform in NumericalIntegral</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-OutputStyle">
         <term>OutputStyle</term>
         <listitem>
          <synopsis>OutputStyle = string</synopsis>
          <para>
	    Output style, this can be normal, latex, mathml or troff.
	  </para>
	  <para>
	    This affects mostly how matrices and fractions are printed out and
	    is useful for pasting into documents.  For example you can set this
	    to the latex by:
	    <programlisting>OutputStyle = "latex"
</programlisting>
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ResultsAsFloats">
         <term>ResultsAsFloats</term>
         <listitem>
          <synopsis>ResultsAsFloats = boolean</synopsis>
          <para>Convert all results to floats before printing</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ScientificNotation">
         <term>ScientificNotation</term>
         <listitem>
          <synopsis>ScientificNotation = boolean</synopsis>
          <para>Use scientific notation</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SumProductNumberOfTries">
         <term>SumProductNumberOfTries</term>
         <listitem>
          <synopsis>SumProductNumberOfTries = number</synopsis>
          <para>How many iterations to try for InfiniteSum and InfiniteProduct</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SumProductSFS">
         <term>SumProductSFS</term>
         <listitem>
          <synopsis>SumProductSFS = number</synopsis>
          <para>How many successive steps to be within tolerance for InfiniteSum and InfiniteProduct</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SumProductTolerance">
         <term>SumProductTolerance</term>
         <listitem>
          <synopsis>SumProductTolerance = number</synopsis>
          <para>Tolerance for InfiniteSum and InfiniteProduct</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-constants">
      <title>Constants</title>
      <variablelist>
        <varlistentry id="gel-function-EulerConstant">
         <term>EulerConstant</term>
         <listitem>
          <synopsis>EulerConstant</synopsis>
          <para>Aliases: <function>gamma</function></para>
          <para>
	    Euler's Constant gamma.  Sometimes called the
	    Euler-Mascheroni constant.
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/MascheroniConstant.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/Euler-MascheroniConstant.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GoldenRatio">
         <term>GoldenRatio</term>
         <listitem>
          <synopsis>GoldenRatio</synopsis>
          <para>The Golden Ratio</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/GoldenRatio.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/GoldenRatio.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Gravity">
         <term>Gravity</term>
         <listitem>
          <synopsis>Gravity</synopsis>
          <para>Free fall acceleration</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-e">
         <term>e</term>
         <listitem>
          <synopsis>e</synopsis>
          <para>
	    The base of the natural logarithm.  <userinput>e^x</userinput>
	    is the exponential function
	    <link linkend='gel-function-exp'>exp</link>.  This is the
	    number approximately 2.71828182846...
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/E.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/e.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-pi">
         <term>pi</term>
         <listitem>
          <synopsis>pi</synopsis>
          <para>
	    The number pi, that is the ratio of a circle's circumference
	    to it's diameter.  This is approximately 3.14159265359...
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/Pi.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/Pi.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-numeric">
      <title>Numeric</title>
      <variablelist>
        <varlistentry id="gel-function-AbsoluteValue">
         <term>AbsoluteValue</term>
         <listitem>
          <synopsis>AbsoluteValue (x)</synopsis>
          <para>Aliases: <function>abs</function></para>
          <para>
	    Absolute value of a number and if <varname>x</varname> is
	    a complex value the modulus of <varname>x</varname>.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/AbsoluteValue.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Chop">
         <term>Chop</term>
         <listitem>
          <synopsis>Chop (x)</synopsis>
          <para>Replace very small number with zero</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ComplexConjugate">
         <term>ComplexConjugate</term>
         <listitem>
          <synopsis>ComplexConjugate (M)</synopsis>
          <para>Aliases: <function>conj</function> <function>Conj</function></para>
          <para>Calculates the conjugate</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Denominator">
         <term>Denominator</term>
         <listitem>
          <synopsis>Denominator (x)</synopsis>
          <para>Get the denominator of a rational number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FractionalPart">
         <term>FractionalPart</term>
         <listitem>
          <synopsis>FractionalPart (x)</synopsis>
          <para>Return the fractional part of a number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Im">
         <term>Im</term>
         <listitem>
          <synopsis>Im (z)</synopsis>
          <para>Aliases: <function>ImaginaryPart</function></para>
          <para>Get the imaginary part of a complex number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IntegerQuotient">
         <term>IntegerQuotient</term>
         <listitem>
          <synopsis>IntegerQuotient (m,n)</synopsis>
          <para>Division w/o remainder</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsComplex">
         <term>IsComplex</term>
         <listitem>
          <synopsis>IsComplex (num)</synopsis>
          <para>Check if argument is a complex (non-real) number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsComplexRational">
         <term>IsComplexRational</term>
         <listitem>
          <synopsis>IsComplexRational (num)</synopsis>
          <para>Check if argument is a possibly complex rational number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsFloat">
         <term>IsFloat</term>
         <listitem>
          <synopsis>IsFloat (num)</synopsis>
          <para>Check if argument is a floating point number (non-complex)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsGaussInteger">
         <term>IsGaussInteger</term>
         <listitem>
          <synopsis>IsGaussInteger (num)</synopsis>
          <para>Aliases: <function>IsComplexInteger</function></para>
          <para>Check if argument is a possibly complex integer</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsGaussianInteger">
         <term>IsGaussianInteger</term>
         <listitem>
          <synopsis>IsGaussianInteger (z)</synopsis>
          <para>Check if argument is a gaussian integer</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsInteger">
         <term>IsInteger</term>
         <listitem>
          <synopsis>IsInteger (num)</synopsis>
          <para>Check if argument is an integer (non-complex)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsNonNegativeInteger">
         <term>IsNonNegativeInteger</term>
         <listitem>
          <synopsis>IsNonNegativeInteger (num)</synopsis>
          <para>Check if argument is a non-negative real integer.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPositiveInteger">
         <term>IsPositiveInteger</term>
         <listitem>
          <synopsis>IsPositiveInteger (num)</synopsis>
          <para>Aliases: <function>IsNaturalNumber</function></para>
          <para>Check if argument is a positive real integer.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsRational">
         <term>IsRational</term>
         <listitem>
          <synopsis>IsRational (num)</synopsis>
          <para>Check if argument is a rational number (non-complex)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsReal">
         <term>IsReal</term>
         <listitem>
          <synopsis>IsReal (num)</synopsis>
          <para>Check if argument is a real number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Numerator">
         <term>Numerator</term>
         <listitem>
          <synopsis>Numerator (x)</synopsis>
          <para>Get the numerator of a rational number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Re">
         <term>Re</term>
         <listitem>
          <synopsis>Re (z)</synopsis>
          <para>Aliases: <function>RealPart</function></para>
          <para>Get the real part of a complex number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Sign">
         <term>Sign</term>
         <listitem>
          <synopsis>Sign (x)</synopsis>
          <para>Aliases: <function>sign</function></para>
          <para>Return the sign of a number.  That is returns
<literal>-1</literal> if value is negative,
<literal>0</literal> if value is zero and
<literal>1</literal> if value is positive.  If <varname>x</varname> is a complex
value then <function>Sign</function> returns the direction or 0.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ceil">
         <term>ceil</term>
         <listitem>
          <synopsis>ceil (x)</synopsis>
          <para>Aliases: <function>Ceiling</function></para>
          <para>Get the lowest integer more than or equal to n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-exp">
         <term>exp</term>
         <listitem>
          <synopsis>exp (x)</synopsis>
          <para>
	    The exponential function.  This is the function
	    <userinput>e^x</userinput> where <varname>e</varname>
	    is the <link linkend='gel-function-e'>base of the natural
	    logarithm</link>.
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/LogarithmFunction.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/ExponentialFunction.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-float">
         <term>float</term>
         <listitem>
          <synopsis>float (x)</synopsis>
          <para>Make number a floating point value.  That is returns the floating point representation of the number <varname>x</varname>.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-floor">
         <term>floor</term>
         <listitem>
          <synopsis>floor (x)</synopsis>
          <para>Aliases: <function>Floor</function></para>
          <para>Get the highest integer less than or equal to n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ln">
         <term>ln</term>
         <listitem>
          <synopsis>ln (x)</synopsis>
          <para>The natural logarithm, the logarithm to base <varname>e</varname>.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-log">
         <term>log</term>
         <listitem>
          <synopsis>log (x,b...)</synopsis>
          <para>Logarithm of <varname>x</varname> base <varname>b</varname> (calls <function>DiscreteLog</function> if in modulo mode), if base is not given, <varname>e</varname> is used.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-log10">
         <term>log10</term>
         <listitem>
          <synopsis>log10 (x)</synopsis>
          <para>Logarithm of x base 10</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-log2">
         <term>log2</term>
         <listitem>
          <synopsis>log2 (x)</synopsis>
          <para>Aliases: <function>lg</function></para>
          <para>Logarithm of x base 2</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-max">
         <term>max</term>
         <listitem>
          <synopsis>max (a,args...)</synopsis>
          <para>Aliases: <function>Max</function> <function>Maximum</function></para>
          <para>Returns the maximum of arguments or matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-min">
         <term>min</term>
         <listitem>
          <synopsis>min (a,args...)</synopsis>
          <para>Aliases: <function>Min</function> <function>Minimum</function></para>
          <para>Returns the minimum of arguments or matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-rand">
         <term>rand</term>
         <listitem>
          <synopsis>rand (size...)</synopsis>
          <para>Generate random float in the range <literal>[0,1)</literal>.
If size is given then a matrix (if two numbers are specified) or vector (if one number is specified) of the given size returned.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-randint">
         <term>randint</term>
         <listitem>
          <synopsis>randint (max,size...)</synopsis>
          <para>Generate random integer in the range
<literal>[0,max)</literal>.
If size is given then a matrix (if two numbers are specified) or vector (if one
number is specified) of the given size returned.  For example
          <screen><prompt>genius></prompt> <userinput>randint(4)</userinput>
= 3
<prompt>genius></prompt> <userinput>randint(4,2)</userinput>
=
[0      1]
<prompt>genius></prompt> <userinput>randint(4,2,3)</userinput>
=
[2      2       1
 0      0       3]
</screen>
          </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-round">
         <term>round</term>
         <listitem>
          <synopsis>round (x)</synopsis>
          <para>Aliases: <function>Round</function></para>
          <para>Round a number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-sqrt">
         <term>sqrt</term>
         <listitem>
          <synopsis>sqrt (x)</synopsis>
          <para>Aliases: <function>SquareRoot</function></para>
          <para>The square root.  When operating modulo some integer will return either a <literal>null</literal> or a vector of the square roots.  Examples:
          <screen><prompt>genius></prompt> <userinput>sqrt(2)</userinput>
= 1.41421356237
<prompt>genius></prompt> <userinput>sqrt(-1)</userinput>
= 1i
<prompt>genius></prompt> <userinput>sqrt(4) mod 7</userinput>
=
[2      5]
<prompt>genius></prompt> <userinput>2*2 mod 7</userinput>
= 4
</screen>
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/SquareRoot.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-trunc">
         <term>trunc</term>
         <listitem>
          <synopsis>trunc (x)</synopsis>
          <para>Aliases: <function>Truncate</function> <function>IntegerPart</function></para>
          <para>Truncate number to an integer (return the integer part)</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-trigonometry">
      <title>Trigonometry</title>
      <variablelist>
        <varlistentry id="gel-function-acos">
         <term>acos</term>
         <listitem>
          <synopsis>acos (x)</synopsis>
          <para>Aliases: <function>arccos</function></para>
          <para>The arccos (reverse cos) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-acosh">
         <term>acosh</term>
         <listitem>
          <synopsis>acosh (x)</synopsis>
          <para>Aliases: <function>arccosh</function></para>
          <para>The arccosh (reverse cosh) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-acot">
         <term>acot</term>
         <listitem>
          <synopsis>acot (x)</synopsis>
          <para>Aliases: <function>arccot</function></para>
          <para>The arccot (reverse cot) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-acoth">
         <term>acoth</term>
         <listitem>
          <synopsis>acoth (x)</synopsis>
          <para>Aliases: <function>arccoth</function></para>
          <para>The arccoth (reverse coth) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-acsc">
         <term>acsc</term>
         <listitem>
          <synopsis>acsc (x)</synopsis>
          <para>Aliases: <function>arccsc</function></para>
          <para>The reverse cosecant function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-acsch">
         <term>acsch</term>
         <listitem>
          <synopsis>acsch (x)</synopsis>
          <para>Aliases: <function>arccsch</function></para>
          <para>The reverse hyperbolic cosecant function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-asec">
         <term>asec</term>
         <listitem>
          <synopsis>asec (x)</synopsis>
          <para>Aliases: <function>arcsec</function></para>
          <para>The reverse secant function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-asech">
         <term>asech</term>
         <listitem>
          <synopsis>asech (x)</synopsis>
          <para>Aliases: <function>arcsech</function></para>
          <para>The reverse hyperbolic secant function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-asin">
         <term>asin</term>
         <listitem>
          <synopsis>asin (x)</synopsis>
          <para>Aliases: <function>arcsin</function></para>
          <para>The arcsin (reverse sin) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-asinh">
         <term>asinh</term>
         <listitem>
          <synopsis>asinh (x)</synopsis>
          <para>Aliases: <function>arcsinh</function></para>
          <para>The arcsinh (reverse sinh) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-atan">
         <term>atan</term>
         <listitem>
          <synopsis>atan (x)</synopsis>
          <para>Aliases: <function>arctan</function></para>
          <para>Calculates the arctan function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-atanh">
         <term>atanh</term>
         <listitem>
          <synopsis>atanh (x)</synopsis>
          <para>Aliases: <function>arctanh</function></para>
          <para>The arctanh (reverse tanh) function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-cos">
         <term>cos</term>
         <listitem>
          <synopsis>cos (x)</synopsis>
          <para>Calculates the cosine function.</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/DefinitionsInTrigonometry.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-cosh">
         <term>cosh</term>
         <listitem>
          <synopsis>cosh (x)</synopsis>
          <para>Calculates the hyperbolic cosine function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/HyperbolicFunctions.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-cot">
         <term>cot</term>
         <listitem>
          <synopsis>cot (x)</synopsis>
          <para>The cotangent function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/DefinitionsInTrigonometry.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-coth">
         <term>coth</term>
         <listitem>
          <synopsis>coth (x)</synopsis>
          <para>The hyperbolic cotangent function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/HyperbolicFunctions.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-csc">
         <term>csc</term>
         <listitem>
          <synopsis>csc (x)</synopsis>
          <para>The cosecant function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/DefinitionsInTrigonometry.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-csch">
         <term>csch</term>
         <listitem>
          <synopsis>csch (x)</synopsis>
          <para>The hyperbolic cosecant function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/HyperbolicFunctions.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-sec">
         <term>sec</term>
         <listitem>
          <synopsis>sec (x)</synopsis>
          <para>The secant function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/DefinitionsInTrigonometry.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-sech">
         <term>sech</term>
         <listitem>
          <synopsis>sech (x)</synopsis>
          <para>The hyperbolic secant function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/HyperbolicFunctions.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-sin">
         <term>sin</term>
         <listitem>
          <synopsis>sin (x)</synopsis>
          <para>Calculates the sine function.</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/DefinitionsInTrigonometry.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-sinh">
         <term>sinh</term>
         <listitem>
          <synopsis>sinh (x)</synopsis>
          <para>Calculates the hyperbolic sine function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/HyperbolicFunctions.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-tan">
         <term>tan</term>
         <listitem>
          <synopsis>tan (x)</synopsis>
          <para>Calculates the tan function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/DefinitionsInTrigonometry.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-tanh">
         <term>tanh</term>
         <listitem>
          <synopsis>tanh (x)</synopsis>
          <para>The hyperbolic tangent function</para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/HyperbolicFunctions.html">Planetmath</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-number-theory">
      <title>Number Theory</title>
      <variablelist>
        <varlistentry id="gel-function-AreRelativelyPrime">
         <term>AreRelativelyPrime</term>
         <listitem>
          <synopsis>AreRelativelyPrime (a,b)</synopsis>
          <para>
	    Are the real integers <varname>a</varname> and <varname>b</varname> relatively prime?  Returns true or false.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/RelativelyPrime.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-BernoulliNumber">
         <term>BernoulliNumber</term>
         <listitem>
          <synopsis>BernoulliNumber (n)</synopsis>
          <para>Return the <varname>n</varname>th Bernoulli number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ChineseRemainder">
         <term>ChineseRemainder</term>
         <listitem>
          <synopsis>ChineseRemainder (a,m)</synopsis>
          <para>Aliases: <function>CRT</function></para>
	  <para>Find the <varname>x</varname> that solves the system given by
		the vector <varname>a</varname> and modulo the elements of
		<varname>m</varname>, using the Chinese Remainder Theorem.
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/ChineseRemainderTheorem.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/ChineseRemainderTheorem.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CombineFactorizations">
         <term>CombineFactorizations</term>
         <listitem>
          <synopsis>CombineFactorizations (a,b)</synopsis>
	  <para>Given two factorizations, give the factorization of the
		product.</para>
	  <para>See <link linkend="gel-function-Factorize">Factorize</link>.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ConvertFromBase">
         <term>ConvertFromBase</term>
         <listitem>
          <synopsis>ConvertFromBase (v,b)</synopsis>
          <para>Convert a vector of values indicating powers of b to a number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ConvertToBase">
         <term>ConvertToBase</term>
         <listitem>
          <synopsis>ConvertToBase (n,b)</synopsis>
          <para>Convert a number to a vector of powers for elements in base b</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DiscreteLog">
         <term>DiscreteLog</term>
         <listitem>
          <synopsis>DiscreteLog (n,b,q)</synopsis>
          <para>Find discrete log of n base b in F_q where q is a prime using the Silver-Pohlig-Hellman algoritm</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/DiscreteLogarithm.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Divides">
         <term>Divides</term>
         <listitem>
          <synopsis>Divides (m,n)</synopsis>
          <para>Checks divisibility (if m divides n)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-EulerPhi">
         <term>EulerPhi</term>
         <listitem>
          <synopsis>EulerPhi (n)</synopsis>
          <para>
	    Compute the Euler phi function for <varname>n</varname>, that is
	    the number of integers between 1 and <varname>n</varname>
	    relatively prime to <varname>n</varname>.
	  </para>
          <para>
	    See
	    <ulink url="http://planetmath.org/encyclopedia/EulerPhifunction.html">Planetmath</ulink> or
	    <ulink url="http://mathworld.wolfram.com/TotientFunction.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ExactDivision">
         <term>ExactDivision</term>
         <listitem>
          <synopsis>ExactDivision (n,d)</synopsis>
          <para>
	    Return <userinput>n/d</userinput> but only if <varname>d</varname>
	    divides <varname>n</varname>.  If <varname>d</varname>
	    does not divide <varname>n</varname> then this function returns
	    garbage.  This is a lot faster for very large numbers
	    than the operation <userinput>n/d</userinput>, but of course only
	    useful if you know that the division is exact.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Factorize">
         <term>Factorize</term>
         <listitem>
          <synopsis>Factorize (n)</synopsis>
          <para>
	    Return factorization of a number as a matrix.  The first
	    row is the primes in the factorization (including 1) and the
	    second row are the powers.  So for example:
	    <screen><prompt>genius></prompt> <userinput>Factorize(11*11*13)</userinput>
=
[1      11      13
 1      2       1]</screen>
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Factors">
         <term>Factors</term>
         <listitem>
          <synopsis>Factors (n)</synopsis>
          <para>
	    Return all factors of <varname>n</varname> in a vector.  This
	    includes all the non-prime factors as well.  It includes 1 and the
	    number itself.  So for example to print all the perfect numbers
	    (those that are sums of their factors) up to the number 1000 you
	    could do (this is of course very inefficent)
	    <programlisting>for n=1 to 1000 do (
    if MatrixSum (Factors(n)) == 2*n then
        print(n)
)
</programlisting>
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FermatFactorization">
         <term>FermatFactorization</term>
         <listitem>
          <synopsis>FermatFactorization (n,tries)</synopsis>
          <para>
	    Attempt fermat factorization of <varname>n</varname> into
	    <userinput>(t-s)*(t+s)</userinput>, returns <varname>t</varname>
	    and <varname>s</varname> as a vector if possible, null otherwise.
	    <varname>tries</varname> specifies the number of tries before
	    giving up.
	  </para>
          <para>
	    This is a fairly good factorization if your number is the product
	    of two factors that are very close to each other.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FindPrimitiveElementMod">
         <term>FindPrimitiveElementMod</term>
         <listitem>
          <synopsis>FindPrimitiveElementMod (q)</synopsis>
          <para>Find the first primitive element in F_q (q must be a prime)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FindRandomPrimitiveElementMod">
         <term>FindRandomPrimitiveElementMod</term>
         <listitem>
          <synopsis>FindRandomPrimitiveElementMod (q)</synopsis>
          <para>Find a random primitive element in F_q (q must be a prime)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IndexCalculus">
         <term>IndexCalculus</term>
         <listitem>
          <synopsis>IndexCalculus (n,b,q,S)</synopsis>
          <para>Compute discrete log base b of n in F_q (q a prime) using the factor base S.  S should be a column of primes possibly with second column precalculated by IndexCalculusPrecalculation.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IndexCalculusPrecalculation">
         <term>IndexCalculusPrecalculation</term>
         <listitem>
          <synopsis>IndexCalculusPrecalculation (b,q,S)</synopsis>
          <para>Run the precalculation step of IndexCalculus for logarithms base b in F_q (q a prime) for the factor base S (where S is a column vector of primes).  The logs will be precalculated and returned in the second column.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsEven">
         <term>IsEven</term>
         <listitem>
          <synopsis>IsEven (n)</synopsis>
          <para>Tests if an integer is even.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsNthPower">
         <term>IsNthPower</term>
         <listitem>
          <synopsis>IsNthPower (m,n)</synopsis>
          <para>
	    Tests if a rational number <varname>m</varname> is a perfect
	    <varname>n</varname>th power.  See also
	    <link linkend='gel-function-IsPerfectPower'>IsPerfectPower</link>
	    and
	    <link linkend='gel-function-IsPerfectSquare'>IsPerfectSquare</link>.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsOdd">
         <term>IsOdd</term>
         <listitem>
          <synopsis>IsOdd (n)</synopsis>
          <para>Tests if an integer is odd</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPerfectPower">
         <term>IsPerfectPower</term>
         <listitem>
          <synopsis>IsPerfectPower (n)</synopsis>
          <para>Check a number for being any perfect power (a^b)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPerfectSquare">
         <term>IsPerfectSquare</term>
         <listitem>
          <synopsis>IsPerfectSquare (n)</synopsis>
          <para>
	    Check a number for being a perfect square.  The number must
	    be a real integer.  Negative integers are of course never perfect
	    squares.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPrime">
         <term>IsPrime</term>
         <listitem>
          <synopsis>IsPrime (n)</synopsis>
          <para>
	    Tests primality of integers, for numbers less than 25*10^9 the
	    answer is deterministic (if Riemann hypothesis is true).  For
	    numbers larger, the probability of a false positive
	    depends on
	    <link linkend='gel-function-IsPrimeMillerRabinReps'>
	    <function>IsPrimeMillerRabinReps</function></link>.  That
	    is the probability of false positive is 1/4 to the power
	    <function>IsPrimeMillerRabinReps</function>.  The default
	    value of 22 yields a probability of about 5.7e-14.
	  </para>
          <para>
	    If <literal>false</literal> is returned, you can be sure that
	    the number is a composite.  If you want to be absolutely sure
	    that you have a prime you can use 
	    <link linkend='gel-function-MillerRabinTestSure'>
	    <function>MillerRabinTestSure</function></link> but it may take
	    a lot longer.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/PrimeNumber.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPrimitiveMod">
         <term>IsPrimitiveMod</term>
         <listitem>
          <synopsis>IsPrimitiveMod (g,q)</synopsis>
          <para>Check if g is primitive in F_q, where q is a prime.  If q is not prime results are bogus.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPrimitiveModWithPrimeFactors">
         <term>IsPrimitiveModWithPrimeFactors</term>
         <listitem>
          <synopsis>IsPrimitiveModWithPrimeFactors (g,q,f)</synopsis>
          <para>Check if g is primitive in F_q, where q is a prime and f is a vector of prime factors of q-1.  If q is not prime results are bogus.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPseudoprime">
         <term>IsPseudoprime</term>
         <listitem>
          <synopsis>IsPseudoprime (n,b)</synopsis>
          <para>If n is a pseudoprime base b but not a prime, that is if b^(n-1) == 1 mod n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsStrongPseudoprime">
         <term>IsStrongPseudoprime</term>
         <listitem>
          <synopsis>IsStrongPseudoprime (n,b)</synopsis>
          <para>Test if n is a strong pseudoprime to base b but not a prime</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Jacobi">
         <term>Jacobi</term>
         <listitem>
          <synopsis>Jacobi (a,b)</synopsis>
          <para>Aliases: <function>JacobiSymbol</function></para>
          <para>Calculate the Jacobi symbol (a/b) (b should be odd)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-JacobiKronecker">
         <term>JacobiKronecker</term>
         <listitem>
          <synopsis>JacobiKronecker (a,b)</synopsis>
          <para>Aliases: <function>JacobiKroneckerSymbol</function></para>
          <para>Calculate the Jacobi symbol (a/b) with the Kronecker extension (a/2)=(2/a) when a odd, or (a/2)=0 when a even</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LeastAbsoluteResidue">
         <term>LeastAbsoluteResidue</term>
         <listitem>
          <synopsis>LeastAbsoluteResidue (a,n)</synopsis>
          <para>Return the residue of a mod n with the least absolute value (in the interval -n/2 to n/2)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Legendre">
         <term>Legendre</term>
         <listitem>
          <synopsis>Legendre (a,p)</synopsis>
          <para>Aliases: <function>LegendreSymbol</function></para>
          <para>Calculate the Legendre symbol (a/p).</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/LegendreSymbol.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LucasLehmer">
         <term>LucasLehmer</term>
         <listitem>
          <synopsis>LucasLehmer (p)</synopsis>
          <para>Test if Mp is a Mersenne prime using the Lucas-Lehmer test</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/Lucas-LehmerTest.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LucasNumber">
         <term>LucasNumber</term>
         <listitem>
          <synopsis>LucasNumber (n)</synopsis>
          <para>Returns the n'th Lucas number</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/LucasNumber.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MaximalPrimePowerFactors">
         <term>MaximalPrimePowerFactors</term>
         <listitem>
          <synopsis>MaximalPrimePowerFactors (n)</synopsis>
          <para>Return all maximal prime power factors of a number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MillerRabinTest">
         <term>MillerRabinTest</term>
         <listitem>
          <synopsis>MillerRabinTest (n,reps)</synopsis>
          <para>
	    Use the Miller-Rabin primality test on <varname>n</varname>,
	    <varname>reps</varname> number of times.  The probability of false
	    positive is <userinput>(1/4)^reps</userinput>.  It is probably
	    usually better to use
	    <link linkend='gel-function-IsPrime'>
	    <function>IsPrime</function></link> since that is faster and
	    better on smaller integers.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/Rabin-MillerStrongPseudoprimeTest.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MillerRabinTestSure">
         <term>MillerRabinTestSure</term>
         <listitem>
          <synopsis>MillerRabinTestSure (n)</synopsis>
          <para>
	    Use the Miller-Rabin primality test on <varname>n</varname> with
	    enough bases that assuming the Generalized Reimann Hypothesis the
	    result is deterministic.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/Rabin-MillerStrongPseudoprimeTest.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ModInvert">
         <term>ModInvert</term>
         <listitem>
          <synopsis>ModInvert (n,m)</synopsis>
          <para>Returns inverse of n mod m</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MoebiusMu">
         <term>MoebiusMu</term>
         <listitem>
          <synopsis>MoebiusMu (n)</synopsis>
          <para>
	    Return the Moebius mu function evaluated in <varname>n</varname>.
	    That is, it returns 0 if <varname>n</varname> is not a product
	    of distinct primes and <userinput>(-1)^k</userinput> if it is
	    a product of <varname>k</varname> distinct primes.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/MoebiusFunction.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NextPrime">
         <term>NextPrime</term>
         <listitem>
          <synopsis>NextPrime (n)</synopsis>
          <para>
	    Returns the least prime greater than <varname>n</varname>.
	    Negatives of primes are considered prime and so to get the
	    previous prime you can use <userinput>-NextPrime(-n)</userinput>.
	  </para>
          <para>
	    This uses the GMP's <function>mpz_nextprime</function> which in
	    turn uses the probabilistic Miller-Rabin test.  The probability
	    of false positive is not tunable, but is low enough
	    for all practical purposes.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PadicValuation">
         <term>PadicValuation</term>
         <listitem>
          <synopsis>PadicValuation (n,p)</synopsis>
          <para>Returns the padic valuation (number of trailing zeros in base p).</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PowerMod">
         <term>PowerMod</term>
         <listitem>
          <synopsis>PowerMod (a,b,m)</synopsis>
          <para>Compute a^b mod m</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Prime">
         <term>Prime</term>
         <listitem>
          <synopsis>Prime (n)</synopsis>
          <para>Aliases: <function>prime</function></para>
          <para>Return the n'th prime (up to a limit)</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/PrimeNumber.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PrimeFactors">
         <term>PrimeFactors</term>
         <listitem>
          <synopsis>PrimeFactors (n)</synopsis>
          <para>Return all prime factors of a number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PseudoprimeTest">
         <term>PseudoprimeTest</term>
         <listitem>
          <synopsis>PseudoprimeTest (n,b)</synopsis>
          <para>Pseudoprime test, true iff b^(n-1) == 1 (mod n)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RemoveFactor">
         <term>RemoveFactor</term>
         <listitem>
          <synopsis>RemoveFactor (n,m)</synopsis>
          <para>Removes all instances of the factor m from the number n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SilverPohligHellmanWithFactorization">
         <term>SilverPohligHellmanWithFactorization</term>
         <listitem>
          <synopsis>SilverPohligHellmanWithFactorization (n,b,q,f)</synopsis>
          <para>Find discrete log of n base b in F_q where q is a prime using the Silver-Pohlig-Hellman algoritm, given f being the factorization of q-1</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SqrtModPrime">
         <term>SqrtModPrime</term>
         <listitem>
          <synopsis>SqrtModPrime (n,p)</synopsis>
          <para>Find square root of n mod p (a prime). Null is returned if not a quadratic residue.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-StrongPseudoprimeTest">
         <term>StrongPseudoprimeTest</term>
         <listitem>
          <synopsis>StrongPseudoprimeTest (n,b)</synopsis>
          <para>Run the strong pseudoprime test base b on n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-gcd">
         <term>gcd</term>
         <listitem>
          <synopsis>gcd (a,args...)</synopsis>
          <para>Aliases: <function>GCD</function></para>
          <para>
	    Greatest common divisor of integers.  You can enter as many
	    integers in the argument list, or you can give a vector or a matrix
	    of integers.  If you give more than one matrix of the same
	    size then GCD is done element by element.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/GreatestCommonDivisor.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-lcm">
         <term>lcm</term>
         <listitem>
          <synopsis>lcm (a,args...)</synopsis>
          <para>Aliases: <function>LCM</function></para>
          <para>
	    Least common multiplier of integers.  You can enter as many
	    integers in the argument list, or you can give a vector or a matrix
	    of integers.  If you give more than one matrix of the same size
	    then LCM is done element by element.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/LeastCommonMultiple.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-matrix">
      <title>Matrix Manipulation</title>
      <variablelist>
        <varlistentry id="gel-function-ApplyOverMatrix">
         <term>ApplyOverMatrix</term>
         <listitem>
          <synopsis>ApplyOverMatrix (a,func)</synopsis>
          <para>Apply a function over all entries of a matrix and return a matrix of the results</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ApplyOverMatrix2">
         <term>ApplyOverMatrix2</term>
         <listitem>
          <synopsis>ApplyOverMatrix2 (a,b,func)</synopsis>
          <para>Apply a function over all entries of 2 matrices (or 1 value and 1 matrix) and return a matrix of the results</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ColumnsOf">
         <term>ColumnsOf</term>
         <listitem>
          <synopsis>ColumnsOf (M)</synopsis>
          <para>Gets the columns of a matrix as a horizontal vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ComplementSubmatrix">
         <term>ComplementSubmatrix</term>
         <listitem>
          <synopsis>ComplementSubmatrix (m,r,c)</synopsis>
          <para>Remove column(s) and row(s) from a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CompoundMatrix">
         <term>CompoundMatrix</term>
         <listitem>
          <synopsis>CompoundMatrix (k,A)</synopsis>
          <para>Calculate the kth compund matrix of A</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DeleteColumn">
         <term>DeleteColumn</term>
         <listitem>
          <synopsis>DeleteColumn (M,col)</synopsis>
          <para>Delete a column of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DeleteRow">
         <term>DeleteRow</term>
         <listitem>
          <synopsis>DeleteRow (M,row)</synopsis>
          <para>Delete a row of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DiagonalOf">
         <term>DiagonalOf</term>
         <listitem>
          <synopsis>DiagonalOf (M)</synopsis>
          <para>Gets the diagonal entries of a matrix as a horizontal vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DotProduct">
         <term>DotProduct</term>
         <listitem>
          <synopsis>DotProduct (u,v)</synopsis>
          <para>Aliases: <function>InnerProduct</function></para>
          <para>Get the dot product of two vectors</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ExpandMatrix">
         <term>ExpandMatrix</term>
         <listitem>
          <synopsis>ExpandMatrix (M)</synopsis>
          <para>Expands a matrix just like we do on unquoted matrix input</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-I">
         <term>I</term>
         <listitem>
          <synopsis>I (n)</synopsis>
          <para>Aliases: <function>eye</function></para>
          <para>Make an identity matrix of a given size</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IndexComplement">
         <term>IndexComplement</term>
         <listitem>
          <synopsis>IndexComplement (vec,msize)</synopsis>
          <para>Return the index complement of a vector of indexes</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsDiagonal">
         <term>IsDiagonal</term>
         <listitem>
          <synopsis>IsDiagonal (M)</synopsis>
          <para>Is a matrix diagonal</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsLowerTriangular">
         <term>IsLowerTriangular</term>
         <listitem>
          <synopsis>IsLowerTriangular (M)</synopsis>
          <para>Is a matrix lower triangular</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsMatrixInteger">
         <term>IsMatrixInteger</term>
         <listitem>
          <synopsis>IsMatrixInteger (M)</synopsis>
          <para>Check if a matrix is an integer (non-complex) matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsMatrixRational">
         <term>IsMatrixRational</term>
         <listitem>
          <synopsis>IsMatrixRational (M)</synopsis>
          <para>Check if a matrix is a rational (non-complex) matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsMatrixReal">
         <term>IsMatrixReal</term>
         <listitem>
          <synopsis>IsMatrixReal (M)</synopsis>
          <para>Check if a matrix is a real (non-complex) matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsMatrixSquare">
         <term>IsMatrixSquare</term>
         <listitem>
          <synopsis>IsMatrixSquare (M)</synopsis>
          <para>Is a matrix square</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsUpperTriangular">
         <term>IsUpperTriangular</term>
         <listitem>
          <synopsis>IsUpperTriangular (M)</synopsis>
          <para>Is a matrix upper triangular</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsValueOnly">
         <term>IsValueOnly</term>
         <listitem>
          <synopsis>IsValueOnly (M)</synopsis>
          <para>Check if a matrix is a matrix of numbers</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsVector">
         <term>IsVector</term>
         <listitem>
          <synopsis>IsVector (v)</synopsis>
          <para>Is argument a horizontal or a vertical vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LowerTriangular">
         <term>LowerTriangular</term>
         <listitem>
          <synopsis>LowerTriangular (M)</synopsis>
          <para>Zero out entries above the diagonal</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MakeDiagonal">
         <term>MakeDiagonal</term>
         <listitem>
          <synopsis>MakeDiagonal (v,arg...)</synopsis>
          <para>Aliases: <function>diag</function></para>
          <para>Make diagonal matrix from a vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MatrixProduct">
         <term>MatrixProduct</term>
         <listitem>
          <synopsis>MatrixProduct (a)</synopsis>
          <para>Calculate the product of all elements in a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MatrixSum">
         <term>MatrixSum</term>
         <listitem>
          <synopsis>MatrixSum (a)</synopsis>
          <para>Calculate the sum of all elements in a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MatrixSumSquares">
         <term>MatrixSumSquares</term>
         <listitem>
          <synopsis>MatrixSumSquares (a)</synopsis>
          <para>Calculate the sum of squares of all elements in a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-OuterProduct">
         <term>OuterProduct</term>
         <listitem>
          <synopsis>OuterProduct (u,v)</synopsis>
          <para>Get the outer product of two vectors</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ReverseVector">
         <term>ReverseVector</term>
         <listitem>
          <synopsis>ReverseVector (v)</synopsis>
          <para>Reverse elements in a vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowSum">
         <term>RowSum</term>
         <listitem>
          <synopsis>RowSum (m)</synopsis>
          <para>Calculate sum of each row in a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowSumSquares">
         <term>RowSumSquares</term>
         <listitem>
          <synopsis>RowSumSquares (m)</synopsis>
          <para>Calculate sum of squares of each row in a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowsOf">
         <term>RowsOf</term>
         <listitem>
          <synopsis>RowsOf (M)</synopsis>
          <para>Gets the rows of a matrix as a vertical vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SetMatrixSize">
         <term>SetMatrixSize</term>
         <listitem>
          <synopsis>SetMatrixSize (M,rows,columns)</synopsis>
          <para>Make new matrix of given size from old one</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SortVector">
         <term>SortVector</term>
         <listitem>
          <synopsis>SortVector (v)</synopsis>
          <para>Sort vector elements</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-StripZeroColumns">
         <term>StripZeroColumns</term>
         <listitem>
          <synopsis>StripZeroColumns (M)</synopsis>
          <para>Removes any all-zero columns of M</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-StripZeroRows">
         <term>StripZeroRows</term>
         <listitem>
          <synopsis>StripZeroRows (M)</synopsis>
          <para>Removes any all-zero rows of M</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Submatrix">
         <term>Submatrix</term>
         <listitem>
          <synopsis>Submatrix (m,r,c)</synopsis>
          <para>Return column(s) and row(s) from a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SwapRows">
         <term>SwapRows</term>
         <listitem>
          <synopsis>SwapRows (m,row1,row2)</synopsis>
          <para>Swap two rows in a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-UpperTriangular">
         <term>UpperTriangular</term>
         <listitem>
          <synopsis>UpperTriangular (M)</synopsis>
          <para>Zero out entries below the diagonal</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-columns">
         <term>columns</term>
         <listitem>
          <synopsis>columns (M)</synopsis>
          <para>Get the number of columns of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-elements">
         <term>elements</term>
         <listitem>
          <synopsis>elements (M)</synopsis>
          <para>Get the number of elements of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ones">
         <term>ones</term>
         <listitem>
          <synopsis>ones (rows,columns...)</synopsis>
          <para>Make an matrix of all ones (or a row vector)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-rows">
         <term>rows</term>
         <listitem>
          <synopsis>rows (M)</synopsis>
          <para>Get the number of rows of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-zeros">
         <term>zeros</term>
         <listitem>
          <synopsis>zeros (rows,columns...)</synopsis>
          <para>Make an matrix of all zeros (or a row vector)</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-linear-algebra">
      <title>Linear Algebra</title>
      <variablelist>
        <varlistentry id="gel-function-AuxilliaryUnitMatrix">
         <term>AuxilliaryUnitMatrix</term>
         <listitem>
          <synopsis>AuxilliaryUnitMatrix (n)</synopsis>
          <para>Get the auxilliary unit matrix of size n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-BilinearForm">
         <term>BilinearForm</term>
         <listitem>
          <synopsis>BilinearForm (v,A,w)</synopsis>
          <para>Evaluate (v,w) with respect to the bilinear form given by the matrix A</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-BilinearFormFunction">
         <term>BilinearFormFunction</term>
         <listitem>
          <synopsis>BilinearFormFunction (A)</synopsis>
          <para>Return a function that evaluates two vectors with respect to the bilinear form given by A</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CharacteristicPolynomial">
         <term>CharacteristicPolynomial</term>
         <listitem>
          <synopsis>CharacteristicPolynomial (M)</synopsis>
          <para>Aliases: <function>CharPoly</function></para>
          <para>Get the characteristic polynomial as a vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CharacteristicPolynomialFunction">
         <term>CharacteristicPolynomialFunction</term>
         <listitem>
          <synopsis>CharacteristicPolynomialFunction (M)</synopsis>
          <para>Get the characteristic polynomial as a function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ColumnSpace">
         <term>ColumnSpace</term>
         <listitem>
          <synopsis>ColumnSpace (M)</synopsis>
          <para>Get a basis matrix for the columnspace of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CompanionMatrix">
         <term>CompanionMatrix</term>
         <listitem>
          <synopsis>CompanionMatrix (p)</synopsis>
          <para>Companion matrix of a polynomial (as vector)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ConjugateTranspose">
         <term>ConjugateTranspose</term>
         <listitem>
          <synopsis>ConjugateTranspose (M)</synopsis>
          <para>Conjugate transpose of a matrix (adjoint)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Convolution">
         <term>Convolution</term>
         <listitem>
          <synopsis>Convolution (a,b)</synopsis>
          <para>Aliases: <function>convol</function></para>
          <para>Calculate convolution of two horizontal vectors</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ConvolutionVector">
         <term>ConvolutionVector</term>
         <listitem>
          <synopsis>ConvolutionVector (a,b)</synopsis>
          <para>Calculate convolution of two horizontal vectors</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CrossProduct">
         <term>CrossProduct</term>
         <listitem>
          <synopsis>CrossProduct (v,w)</synopsis>
          <para>CrossProduct of two vectors in R^3</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DeterminantalDivisorsInteger">
         <term>DeterminantalDivisorsInteger</term>
         <listitem>
          <synopsis>DeterminantalDivisorsInteger (M)</synopsis>
          <para>Get the determinantal divisors of an integer matrix (not its characteristic)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DirectSum">
         <term>DirectSum</term>
         <listitem>
          <synopsis>DirectSum (M,N...)</synopsis>
          <para>Direct sum of matrices</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DirectSumMatrixVector">
         <term>DirectSumMatrixVector</term>
         <listitem>
          <synopsis>DirectSumMatrixVector (v)</synopsis>
          <para>Direct sum of a vector of matrices</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Eigenvalues">
         <term>Eigenvalues</term>
         <listitem>
          <synopsis>Eigenvalues (M)</synopsis>
          <para>Aliases: <function>eig</function></para>
          <para>Get the eigenvalues of a matrix (Currently only for 2x2 and triangular matrices)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GramSchmidt">
         <term>GramSchmidt</term>
         <listitem>
          <synopsis>GramSchmidt (v,B)</synopsis>
          <para>Apply the Gram-Schmidt process (to the columns) with respect to innter product given by #2</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GramSchmidtDot">
         <term>GramSchmidtDot</term>
         <listitem>
          <synopsis>GramSchmidtDot (M)</synopsis>
          <para>Apply the Gram-Schmidt process (to the columns) using the dot product</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-HankelMatrix">
         <term>HankelMatrix</term>
         <listitem>
          <synopsis>HankelMatrix (c,r)</synopsis>
          <para>Hankel matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-HilbertMatrix">
         <term>HilbertMatrix</term>
         <listitem>
          <synopsis>HilbertMatrix (n)</synopsis>
          <para>Hilbert matrix of order n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Image">
         <term>Image</term>
         <listitem>
          <synopsis>Image (T)</synopsis>
          <para>Get the image (columnspace) of a linear transform</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InfNorm">
         <term>InfNorm</term>
         <listitem>
          <synopsis>InfNorm (v)</synopsis>
          <para>Get the Inf Norm of a vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InvariantFactorsInteger">
         <term>InvariantFactorsInteger</term>
         <listitem>
          <synopsis>InvariantFactorsInteger (M)</synopsis>
          <para>Get the invariant factors of a square integer matrix (not its characteristic)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InverseHilbertMatrix">
         <term>InverseHilbertMatrix</term>
         <listitem>
          <synopsis>InverseHilbertMatrix (n)</synopsis>
          <para>Inverse Hilbert matrix of order n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsHermitian">
         <term>IsHermitian</term>
         <listitem>
          <synopsis>IsHermitian (M)</synopsis>
          <para>Is a matrix hermitian</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsInSubspace">
         <term>IsInSubspace</term>
         <listitem>
          <synopsis>IsInSubspace (v,W)</synopsis>
          <para>Test if a vector is in a subspace</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsInvertible">
         <term>IsInvertible</term>
         <listitem>
          <synopsis>IsInvertible (n)</synopsis>
          <para>Is a matrix (or number) invertible (Integer matrix is invertible iff it's invertible over the integers)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsInvertibleField">
         <term>IsInvertibleField</term>
         <listitem>
          <synopsis>IsInvertibleField (n)</synopsis>
          <para>Is a matrix (or number) invertible over a field</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsNormal">
         <term>IsNormal</term>
         <listitem>
          <synopsis>IsNormal (M)</synopsis>
          <para>Is a matrix normal</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsSkewHermitian">
         <term>IsSkewHermitian</term>
         <listitem>
          <synopsis>IsSkewHermitian (M)</synopsis>
          <para>Is a matrix skew-hermitian</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsUnitary">
         <term>IsUnitary</term>
         <listitem>
          <synopsis>IsUnitary (M)</synopsis>
          <para>Is a matrix unitary</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-JordanBlock">
         <term>JordanBlock</term>
         <listitem>
          <synopsis>JordanBlock (n,lambda)</synopsis>
          <para>Aliases: <function>J</function></para>
          <para>Get the jordan block corresponding to lambda and n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Kernel">
         <term>Kernel</term>
         <listitem>
          <synopsis>Kernel (T)</synopsis>
          <para>Get the kernel (nullspace) of a linear transform</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LUDecomposition">
         <term>LUDecomposition</term>
         <listitem>
          <synopsis>LUDecomposition (A, L, U)</synopsis>
          <para>
	    Get the LU decomposition of <varname>A</varname>
	    and store the result in the <varname>L</varname> and
	    <varname>U</varname> which should be references.  It returns null.
	    For example suppose that A is a square matrix, then after running:
	    <screen><prompt>genius></prompt> <userinput>LUDecomposition(A,&amp;L,&amp;U)</userinput>
</screen>
	    You will have the lower matrix stored in a variable called
	    <varname>L</varname> and the upper matrix in a variable called
	    <varname>U</varname>.
	  </para>
	  <para>
	    This is the LU decomposition of a matrix aka Crout and/or Cholesky
	    reduction.
	    (ISBN 0-201-11577-8 pp.99-103)
	    The upper triangular matrix features a diagonal
	    of values 1 (one).  This is not Doolittle's Method which features
	    the 1's diagonal on the lower matrix. 
	  </para>
	  <para>
	    Not all matrices have LU decompositions, for example
	    <userinput>[0,1;1,0]</userinput> does not and this function returns
	    <literal>false</literal> in this case and sets <varname>L</varname>
	    and <varname>U</varname> to null.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/LUDecomposition.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Minor">
         <term>Minor</term>
         <listitem>
          <synopsis>Minor (M,i,j)</synopsis>
          <para>Get the i-j minor of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NonPivotColumns">
         <term>NonPivotColumns</term>
         <listitem>
          <synopsis>NonPivotColumns (M)</synopsis>
          <para>Return the columns that are not the pivot columns of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Norm">
         <term>Norm</term>
         <listitem>
          <synopsis>Norm (v,p...)</synopsis>
          <para>Aliases: <function>norm</function></para>
          <para>Get the p Norm (or 2 Norm if no p is supplied) of a vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NullSpace">
         <term>NullSpace</term>
         <listitem>
          <synopsis>NullSpace (T)</synopsis>
          <para>Get the nullspace of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Nullity">
         <term>Nullity</term>
         <listitem>
          <synopsis>Nullity (M)</synopsis>
          <para>Aliases: <function>nullity</function></para>
          <para>Get the nullity of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-OrthogonalComplement">
         <term>OrthogonalComplement</term>
         <listitem>
          <synopsis>OrthogonalComplement (M)</synopsis>
          <para>Get the orthogonal complement of the columnspace</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PivotColumns">
         <term>PivotColumns</term>
         <listitem>
          <synopsis>PivotColumns (M)</synopsis>
          <para>Return pivot columns of a matrix, that is columns which have a leading 1 in rref form, also returns the row where they occur</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Projection">
         <term>Projection</term>
         <listitem>
          <synopsis>Projection (v,W,B)</synopsis>
          <para>Projection of vector v onto subspace W given a bilinear form B</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RaleighQuotient">
         <term>RaleighQuotient</term>
         <listitem>
          <synopsis>RaleighQuotient (A,x)</synopsis>
          <para>Return the Raleigh Quotient of a matrix and a vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Rank">
         <term>Rank</term>
         <listitem>
          <synopsis>Rank (M)</synopsis>
          <para>Aliases: <function>rank</function></para>
          <para>Get the rank of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RosserMatrix">
         <term>RosserMatrix</term>
         <listitem>
          <synopsis>RosserMatrix ()</synopsis>
          <para>Rosser matrix, a classic symmetric eigenvalue test problem</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Rotation2D">
         <term>Rotation2D</term>
         <listitem>
          <synopsis>Rotation2D (angle)</synopsis>
          <para>Aliases: <function>RotationMatrix</function></para>
          <para>Rotation around origin in R^2</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Rotation3DX">
         <term>Rotation3DX</term>
         <listitem>
          <synopsis>Rotation3DX (angle)</synopsis>
          <para>Rotation around origin in R^3 about the x-axis</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Rotation3DY">
         <term>Rotation3DY</term>
         <listitem>
          <synopsis>Rotation3DY (angle)</synopsis>
          <para>Rotation around origin in R^3 about the y-axis</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Rotation3DZ">
         <term>Rotation3DZ</term>
         <listitem>
          <synopsis>Rotation3DZ (angle)</synopsis>
          <para>Rotation around origin in R^3 about the z-axis</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowSpace">
         <term>RowSpace</term>
         <listitem>
          <synopsis>RowSpace (M)</synopsis>
          <para>Get a basis matrix for the rowspace of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SmithNormalFormField">
         <term>SmithNormalFormField</term>
         <listitem>
          <synopsis>SmithNormalFormField (A)</synopsis>
          <para>Smith Normal Form for fields (will end up with 1's on the diagonal)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SmithNormalFormInteger">
         <term>SmithNormalFormInteger</term>
         <listitem>
          <synopsis>SmithNormalFormInteger (M)</synopsis>
          <para>Smith Normal Form for square integer matrices (not its characteristic)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SolveLinearSystem">
         <term>SolveLinearSystem</term>
         <listitem>
          <synopsis>SolveLinearSystem (M,V,args...)</synopsis>
          <para>Solve linear system Mx=V, return solution V if there is a unique solution, null otherwise.  Extra two reference parameters can optionally be used to get the reduced M and V.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Trace">
         <term>Trace</term>
         <listitem>
          <synopsis>Trace (m)</synopsis>
          <para>Aliases: <function>trace</function></para>
          <para>Calculate the trace of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Transpose">
         <term>Transpose</term>
         <listitem>
          <synopsis>Transpose (M)</synopsis>
          <para>Transpose of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-VandermondeMatrix">
         <term>VandermondeMatrix</term>
         <listitem>
          <synopsis>VandermondeMatrix (v)</synopsis>
          <para>Aliases: <function>vander</function></para>
          <para>Return the Vandermonde matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-VectorAngle">
         <term>VectorAngle</term>
         <listitem>
          <synopsis>VectorAngle (v,w,B)</synopsis>
          <para>The angle of two vectors, given an inner product</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-VectorSpaceDirectSum">
         <term>VectorSpaceDirectSum</term>
         <listitem>
          <synopsis>VectorSpaceDirectSum (M,N)</synopsis>
          <para>The direct sum of the vector spaces M and N</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-VectorSubspaceIntersection">
         <term>VectorSubspaceIntersection</term>
         <listitem>
          <synopsis>VectorSubspaceIntersection (M,N)</synopsis>
          <para>Intersection of the subspaces given by M and N</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-VectorSubspaceSum">
         <term>VectorSubspaceSum</term>
         <listitem>
          <synopsis>VectorSubspaceSum (M,N)</synopsis>
          <para>The sum of the vector spaces M and N, that is {w | w=m+n, m in M, n in N}</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-adj">
         <term>adj</term>
         <listitem>
          <synopsis>adj (m)</synopsis>
          <para>Aliases: <function>Adjugate</function></para>
          <para>Get the classical adjoint (adjugate) of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-cref">
         <term>cref</term>
         <listitem>
          <synopsis>cref (M)</synopsis>
          <para>Aliases: <function>CREF</function> <function>ColumnReducedEchelonForm</function></para>
          <para>Compute the Column Reduced Echelon Form</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-det">
         <term>det</term>
         <listitem>
          <synopsis>det (M)</synopsis>
          <para>Aliases: <function>Determinant</function></para>
          <para>Get the determinant of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ref">
         <term>ref</term>
         <listitem>
          <synopsis>ref (M)</synopsis>
          <para>Aliases: <function>REF</function> <function>RowEchelonForm</function></para>
          <para>Get the row echelon form of a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-rref">
         <term>rref</term>
         <listitem>
          <synopsis>rref (M)</synopsis>
          <para>Aliases: <function>RREF</function> <function>ReducedRowEchelonForm</function></para>
          <para>Get the reduced row echelon form of a matrix</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-combinatorics">
      <title>Combinatorics</title>
      <variablelist>
        <varlistentry id="gel-function-Catalan">
         <term>Catalan</term>
         <listitem>
          <synopsis>Catalan (n)</synopsis>
          <para>Get n'th catalan number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Combinations">
         <term>Combinations</term>
         <listitem>
          <synopsis>Combinations (k,n)</synopsis>
          <para>Get all combinations of k numbers from 1 to n as a vector of vectors</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DoubleFactorial">
         <term>DoubleFactorial</term>
         <listitem>
          <synopsis>DoubleFactorial (n)</synopsis>
          <para>Double factorial: n(n-2)(n-4)...</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Factorial">
         <term>Factorial</term>
         <listitem>
          <synopsis>Factorial (n)</synopsis>
          <para>Factorial: n(n-1)(n-2)...</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FallingFactorial">
         <term>FallingFactorial</term>
         <listitem>
          <synopsis>FallingFactorial (n,k)</synopsis>
          <para>Falling factorial: (n)_k = n(n-1)...(n-(k-1))</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Fibbonachi">
         <term>Fibbonachi</term>
         <listitem>
          <synopsis>Fibbonachi (x)</synopsis>
          <para>Aliases: <function>fib</function></para>
          <para>
	    Calculate <varname>n</varname>th fibbonachi number.  That
	    is the number defined recursively by
	    <userinput>Fibbonachi(n) = Fibbonachi(n-1) + Fibbonachi(n-2)</userinput>
	    and 
	    <userinput>Fibbonachi(1) = Fibbonachi(2) = 1</userinput>.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/FibonacciNumber.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GaloisMatrix">
         <term>GaloisMatrix</term>
         <listitem>
          <synopsis>GaloisMatrix (combining_rule)</synopsis>
          <para>Galois matrix given a linear combining rule (a_1*x_+...+a_n*x_n=x_(n+1))</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-HarmonicNumber">
         <term>HarmonicNumber</term>
         <listitem>
          <synopsis>HarmonicNumber (n,r)</synopsis>
          <para>Aliases: <function>HarmonicH</function></para>
          <para>Harmonic Number, the nth harmonic number of order r</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Hofstadter">
         <term>Hofstadter</term>
         <listitem>
          <synopsis>Hofstadter (n)</synopsis>
          <para>Hofstadter's function q(n) defined by q(1)=1, q(2)=1, q(n)=q(n-q(n-1))+q(n-q(n-2))</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LinearRecursiveSequence">
         <term>LinearRecursiveSequence</term>
         <listitem>
          <synopsis>LinearRecursiveSequence (seed_values,combining_rule,n)</synopsis>
          <para>Compute linear recursive sequence using galois stepping</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Multinomial">
         <term>Multinomial</term>
         <listitem>
          <synopsis>Multinomial (v,arg...)</synopsis>
          <para>Calculate multinomial coefficients</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Pascal">
         <term>Pascal</term>
         <listitem>
          <synopsis>Pascal (i)</synopsis>
          <para>Get the pascal's triangle as a matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Permutations">
         <term>Permutations</term>
         <listitem>
          <synopsis>Permutations (k,n)</synopsis>
          <para>Get all permutations of k numbers from 1 to n as a vector of vectors</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RisingFactorial">
         <term>RisingFactorial</term>
         <listitem>
          <synopsis>RisingFactorial (n,k)</synopsis>
          <para>Aliases: <function>Puchhammer</function></para>
          <para>(Puchhammer) Rising factorial: (n)_k = n(n+1)...(n+(k-1))</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Subfactorial">
         <term>Subfactorial</term>
         <listitem>
          <synopsis>Subfactorial (n)</synopsis>
          <para>Subfactorial: n! times sum_{k=1}^n (-1)^k/k!</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Triangular">
         <term>Triangular</term>
         <listitem>
          <synopsis>Triangular (nth)</synopsis>
          <para>Calculate the nth triangular number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-nCr">
         <term>nCr</term>
         <listitem>
          <synopsis>nCr (n,r)</synopsis>
          <para>Aliases: <function>Binomial</function></para>
          <para>Calculate combinations (binomial coefficient)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-nPr">
         <term>nPr</term>
         <listitem>
          <synopsis>nPr (n,r)</synopsis>
          <para>Calculate permutations</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-calculus">
      <title>Calculus</title>
      <variablelist>
        <varlistentry id="gel-function-CompositeSimpsonsRule">
         <term>CompositeSimpsonsRule</term>
         <listitem>
          <synopsis>CompositeSimpsonsRule (f,a,b,n)</synopsis>
          <para>Integration of f by Composite Simpson's Rule on the interval [a,b] with n subintervals with error of max(f'''')*h^4*(b-a)/180, note that n should be even</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-CompositeSimpsonsRuleTolerance">
         <term>CompositeSimpsonsRuleTolerance</term>
         <listitem>
          <synopsis>CompositeSimpsonsRuleTolerance (f,a,b,FourthDerivativeBound,Tolerance)</synopsis>
          <para>Integration of f by Composite Simpson's Rule on the interval [a,b] with the number of steps calculated by the fourth derivative bound and the desired tolerance</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InfiniteProduct">
         <term>InfiniteProduct</term>
         <listitem>
          <synopsis>InfiniteProduct (func,start,inc)</synopsis>
          <para>Try to calculate an infinite product for a single parameter function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InfiniteProduct2">
         <term>InfiniteProduct2</term>
         <listitem>
          <synopsis>InfiniteProduct2 (func,arg,start,inc)</synopsis>
          <para>Try to calculate an infinite product for a double parameter function with func(arg,n)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InfiniteSum">
         <term>InfiniteSum</term>
         <listitem>
          <synopsis>InfiniteSum (func,start,inc)</synopsis>
          <para>Try to calculate an infinite sum for a single parameter function</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-InfiniteSum2">
         <term>InfiniteSum2</term>
         <listitem>
          <synopsis>InfiniteSum2 (func,arg,start,inc)</synopsis>
          <para>Try to calculate an infinite sum for a double parameter function with func(arg,n)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsContinuous">
         <term>IsContinuous</term>
         <listitem>
          <synopsis>IsContinuous (f,x0)</synopsis>
          <para>Try and see if a real-valued function is continuous at x0 by calculating the limit there</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsDifferentiable">
         <term>IsDifferentiable</term>
         <listitem>
          <synopsis>IsDifferentiable (f,x0)</synopsis>
          <para>Test for differentiability by approximating the left and right limits and comparing</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-LeftLimit">
         <term>LeftLimit</term>
         <listitem>
          <synopsis>LeftLimit (f,x0)</synopsis>
          <para>Calculate the left limit of a real-valued function at x0</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Limit">
         <term>Limit</term>
         <listitem>
          <synopsis>Limit (f,x0)</synopsis>
          <para>Calculate the limit of a real-valued function at x0.  Tries to calculate both left and right limits.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MidpointRule">
         <term>MidpointRule</term>
         <listitem>
          <synopsis>MidpointRule (f,a,b,n)</synopsis>
          <para>Integration by midpoint rule</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalDerivative">
         <term>NumericalDerivative</term>
         <listitem>
          <synopsis>NumericalDerivative (f,x0)</synopsis>
          <para>Aliases: <function>NDerivative</function></para>
          <para>Attempt to calculate numerical derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalIntegral">
         <term>NumericalIntegral</term>
         <listitem>
          <synopsis>NumericalIntegral (f,a,b)</synopsis>
          <para>Integration by rule set in NumericalIntegralFunction of f from a to b using NumericalIntegralSteps steps</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalLeftDerivative">
         <term>NumericalLeftDerivative</term>
         <listitem>
          <synopsis>NumericalLeftDerivative (f,x0)</synopsis>
          <para>Attempt to calculate numerical left derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalLimitAtInfinity">
         <term>NumericalLimitAtInfinity</term>
         <listitem>
          <synopsis>NumericalLimitAtInfinity (_f,step_fun,tolerance,successive_for_success,N)</synopsis>
          <para>Attempt to calculate the limit of f(step_fun(i)) as i goes from 1 to N</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-NumericalRightDerivative">
         <term>NumericalRightDerivative</term>
         <listitem>
          <synopsis>NumericalRightDerivative (f,x0)</synopsis>
          <para>Attempt to calculate numerical right derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-OneSidedFivePointFormula">
         <term>OneSidedFivePointFormula</term>
         <listitem>
          <synopsis>OneSidedFivePointFormula (f,x0,h)</synopsis>
          <para>Compute one-sided derivative using five point formula</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-OneSidedThreePointFormula">
         <term>OneSidedThreePointFormula</term>
         <listitem>
          <synopsis>OneSidedThreePointFormula (f,x0,h)</synopsis>
          <para>Compute one-sided derivative using three-point formula</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RightLimit">
         <term>RightLimit</term>
         <listitem>
          <synopsis>RightLimit (f,x0)</synopsis>
          <para>Calculate the right limit of a real-valued function at x0</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-TwoSidedFivePointFormula">
         <term>TwoSidedFivePointFormula</term>
         <listitem>
          <synopsis>TwoSidedFivePointFormula (f,x0,h)</synopsis>
          <para>Compute two-sided derivative using five-point formula</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-TwoSidedThreePointFormula">
         <term>TwoSidedThreePointFormula</term>
         <listitem>
          <synopsis>TwoSidedThreePointFormula (f,x0,h)</synopsis>
          <para>Compute two-sided derivative using three-point formula</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-functions">
      <title>Functions</title>
      <variablelist>
        <varlistentry id="gel-function-Argument">
         <term>Argument</term>
         <listitem>
          <synopsis>Argument (z)</synopsis>
          <para>Aliases: <function>Arg</function> <function>arg</function></para>
          <para>argument (angle) of complex number</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DirichletKernel">
         <term>DirichletKernel</term>
         <listitem>
          <synopsis>DirichletKernel (n,t)</synopsis>
          <para>Dirichlet kernel of order n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-DiscreteDelta">
         <term>DiscreteDelta</term>
         <listitem>
          <synopsis>DiscreteDelta (v)</synopsis>
          <para>Returns 1 iff all elements are zero</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-ErrorFunction">
         <term>ErrorFunction</term>
         <listitem>
          <synopsis>ErrorFunction (x)</synopsis>
          <para>Aliases: <function>erf</function></para>
          <para>The error function, 2/sqrt(pi) * int_0^x e^(-t^2) dt</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FejerKernel">
         <term>FejerKernel</term>
         <listitem>
          <synopsis>FejerKernel (n,t)</synopsis>
          <para>Fejer kernel of order n</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-KroneckerDelta">
         <term>KroneckerDelta</term>
         <listitem>
          <synopsis>KroneckerDelta (v)</synopsis>
          <para>Returns 1 iff all elements are equal</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MinimizeFunction">
         <term>MinimizeFunction</term>
         <listitem>
          <synopsis>MinimizeFunction (func,x,incr)</synopsis>
          <para>Find the first value where f(x)=0</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MoebiusDiskMapping">
         <term>MoebiusDiskMapping</term>
         <listitem>
          <synopsis>MoebiusDiskMapping (a,z)</synopsis>
          <para>Moebius mapping of the disk to itself mapping a to 0</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MoebiusMapping">
         <term>MoebiusMapping</term>
         <listitem>
          <synopsis>MoebiusMapping (z,z2,z3,z4)</synopsis>
          <para>Moebius mapping using the cross ratio taking z2,z3,z4 to 1,0, and infinity respectively</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MoebiusMappingInftyToInfty">
         <term>MoebiusMappingInftyToInfty</term>
         <listitem>
          <synopsis>MoebiusMappingInftyToInfty (z,z2,z3)</synopsis>
          <para>Moebius mapping using the cross ratio taking infinity to infinity and z2,z3 to 1 and 0 respectively</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MoebiusMappingInftyToOne">
         <term>MoebiusMappingInftyToOne</term>
         <listitem>
          <synopsis>MoebiusMappingInftyToOne (z,z3,z4)</synopsis>
          <para>Moebius mapping using the cross ratio taking infinity to 1 and z3,z4 to 0 and infinity respectively</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MoebiusMappingInftyToZero">
         <term>MoebiusMappingInftyToZero</term>
         <listitem>
          <synopsis>MoebiusMappingInftyToZero (z,z2,z4)</synopsis>
          <para>Moebius mapping using the cross ratio taking infinity to 0 and z2,z4 to 1 and infinity respectively</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PoissonKernel">
         <term>PoissonKernel</term>
         <listitem>
          <synopsis>PoissonKernel (r,sigma)</synopsis>
          <para>Poisson kernel on D(0,1) (not normalized to 1, that is integral of this is 2pi)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PoissonKernelRadius">
         <term>PoissonKernelRadius</term>
         <listitem>
          <synopsis>PoissonKernelRadius (r,sigma)</synopsis>
          <para>Poisson kernel on D(0,R) (not normalized to 1)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-UnitStep">
         <term>UnitStep</term>
         <listitem>
          <synopsis>UnitStep (x)</synopsis>
          <para>The unit step function is 0 for x&lt;0, 1 otherwise.  This is the integral of the Dirac Delta function.</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-cis">
         <term>cis</term>
         <listitem>
          <synopsis>cis (x)</synopsis>
          <para>
	    The <function>cis</function> function, that is the same as
	    <userinput>cos(x)+1i*sin(x)</userinput>
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-deg2rad">
         <term>deg2rad</term>
         <listitem>
          <synopsis>deg2rad (x)</synopsis>
          <para>Convert degrees to radians</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-rad2deg">
         <term>rad2deg</term>
         <listitem>
          <synopsis>rad2deg (x)</synopsis>
          <para>Convert radians to degrees</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-equation-solving">
      <title>Equation Solving</title>
      <variablelist>

        <varlistentry id="gel-function-EulerMethod">
         <term>EulerMethod</term>
         <listitem>
          <synopsis>EulerMethod (f,x0,y0,x1,n)</synopsis>
          <para>
	    Use classical Euler's method to numerically solve y'=f(x,y) for
	    initial <varname>x0</varname>, <varname>y0</varname> going to
	    <varname>x1</varname> with <varname>n</varname> increments,
	    returns <varname>y</varname> at <varname>x1</varname>.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/EulerForwardMethod.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FindRootBisection">
         <term>FindRootBisection</term>
         <listitem>
          <synopsis>FindRootBisection (f,a,b,TOL,N)</synopsis>
          <para>Find root of a function using the bisection method</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FindRootFalsePosition">
         <term>FindRootFalsePosition</term>
         <listitem>
          <synopsis>FindRootFalsePosition (f,a,b,TOL,N)</synopsis>
          <para>Find root of a function using the method of false position</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FindRootMullersMethod">
         <term>FindRootMullersMethod</term>
         <listitem>
          <synopsis>FindRootMullersMethod (f,x1,x2,x3,TOL,N)</synopsis>
          <para>Find root of a function using the Muller's method</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-FindRootSecant">
         <term>FindRootSecant</term>
         <listitem>
          <synopsis>FindRootSecant (f,a,b,TOL,N)</synopsis>
          <para>Find root of a function using the secant method</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RungeKutta">
         <term>RungeKutta</term>
         <listitem>
          <synopsis>RungeKutta (f,x0,y0,x1,n)</synopsis>
          <para>
	    Use classical non-adaptive Runge-Kutta method to numerically solve
	    y'=f(x,y) for initial <varname>x0</varname>, <varname>y0</varname>
	    going to <varname>x1</varname> with <varname>n</varname>
	    increments, returns <varname>y</varname> at <varname>x1</varname>.
	  </para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/Runge-KuttaMethod.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>


      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-statistics">
      <title>Statistics</title>
      <variablelist>
        <varlistentry id="gel-function-Average">
         <term>Average</term>
         <listitem>
          <synopsis>Average (m)</synopsis>
          <para>Aliases: <function>average</function> <function>Mean</function> <function>mean</function></para>
          <para>Calculate average of an entire matrix</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/ArithmeticMean.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GaussDistribution">
         <term>GaussDistribution</term>
         <listitem>
          <synopsis>GaussDistribution (x,sigma)</synopsis>
          <para>Integral of the GaussFunction from 0 to x (area under the normal curve)</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/NormalDistribution.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-GaussFunction">
         <term>GaussFunction</term>
         <listitem>
          <synopsis>GaussFunction (x,sigma)</synopsis>
          <para>The normalized Gauss distribution function (the normal curve)</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/NormalDistribution.html">Mathworld</ulink> for more information.
	  </para>

         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Median">
         <term>Median</term>
         <listitem>
          <synopsis>Median (m)</synopsis>
          <para>Aliases: <function>median</function></para>
          <para>Calculate median of an entire matrix</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/StatisticalMedian.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PopulationStandardDeviation">
         <term>PopulationStandardDeviation</term>
         <listitem>
          <synopsis>PopulationStandardDeviation (m)</synopsis>
          <para>Aliases: <function>stdevp</function></para>
          <para>Calculate the population standard deviation of a whole matrix</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowAverage">
         <term>RowAverage</term>
         <listitem>
          <synopsis>RowAverage (m)</synopsis>
          <para>Aliases: <function>RowMean</function></para>
          <para>Calculate average of each row in a matrix</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/ArithmeticMean.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowMedian">
         <term>RowMedian</term>
         <listitem>
          <synopsis>RowMedian (m)</synopsis>
          <para>Calculate median of each row in a matrix and return a column
	  vector of the medians.</para>
          <para>
	    See
	    <ulink url="http://mathworld.wolfram.com/StatisticalMedian.html">Mathworld</ulink> for more information.
	  </para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowPopulationStandardDeviation">
         <term>RowPopulationStandardDeviation</term>
         <listitem>
          <synopsis>RowPopulationStandardDeviation (m)</synopsis>
          <para>Aliases: <function>rowstdevp</function></para>
          <para>Calculate the population standard deviations of rows of a matrix and return a vertical vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-RowStandardDeviation">
         <term>RowStandardDeviation</term>
         <listitem>
          <synopsis>RowStandardDeviation (m)</synopsis>
          <para>Aliases: <function>rowstdev</function></para>
          <para>Calculate the standard deviations of rows of a matrix and return a vertical vector</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-StandardDeviation">
         <term>StandardDeviation</term>
         <listitem>
          <synopsis>StandardDeviation (m)</synopsis>
          <para>Aliases: <function>stdev</function></para>
          <para>Calculate the standard deviation of a whole matrix</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-polynomials">
      <title>Polynomials</title>
      <variablelist>
        <varlistentry id="gel-function-AddPoly">
         <term>AddPoly</term>
         <listitem>
          <synopsis>AddPoly (p1,p2)</synopsis>
          <para>Add two polynomials (vectors)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsPoly">
         <term>IsPoly</term>
         <listitem>
          <synopsis>IsPoly (p)</synopsis>
          <para>Check if a vector is usable as a polynomial</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MultiplyPoly">
         <term>MultiplyPoly</term>
         <listitem>
          <synopsis>MultiplyPoly (p1,p2)</synopsis>
          <para>Multiply two polynomials (as vectors)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Poly2ndDerivative">
         <term>Poly2ndDerivative</term>
         <listitem>
          <synopsis>Poly2ndDerivative (p)</synopsis>
          <para>Take second polynomial (as vector) derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PolyDerivative">
         <term>PolyDerivative</term>
         <listitem>
          <synopsis>PolyDerivative (p)</synopsis>
          <para>Take polynomial (as vector) derivative</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PolyToFunction">
         <term>PolyToFunction</term>
         <listitem>
          <synopsis>PolyToFunction (p)</synopsis>
          <para>Make function out of a polynomial (as vector)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-PolyToString">
         <term>PolyToString</term>
         <listitem>
          <synopsis>PolyToString (p,var...)</synopsis>
          <para>Make string out of a polynomial (as vector)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SubtractPoly">
         <term>SubtractPoly</term>
         <listitem>
          <synopsis>SubtractPoly (p1,p2)</synopsis>
          <para>Subtract two polynomials (as vectors)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-TrimPoly">
         <term>TrimPoly</term>
         <listitem>
          <synopsis>TrimPoly (p)</synopsis>
          <para>Trim zeros from a polynomial (as vector)</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-set-theory">
      <title>Set Theory</title>
      <variablelist>
        <varlistentry id="gel-function-Intersection">
         <term>Intersection</term>
         <listitem>
          <synopsis>Intersection (X,Y)</synopsis>
          <para>Returns a set theoretic intersection of X and Y (X and Y are vectors pretending to be sets)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-IsIn">
         <term>IsIn</term>
         <listitem>
          <synopsis>IsIn (x,X)</synopsis>
          <para>Returns true if the element x is in the set X (where X is a vector pretending to be a set)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-MakeSet">
         <term>MakeSet</term>
         <listitem>
          <synopsis>MakeSet (X)</synopsis>
          <para>Returns a set where every element of X appears only once</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-SetMinus">
         <term>SetMinus</term>
         <listitem>
          <synopsis>SetMinus (X,Y)</synopsis>
          <para>Returns a set theoretic difference X-Y (X and Y are vectors pretending to be sets)</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-Union">
         <term>Union</term>
         <listitem>
          <synopsis>Union (X,Y)</synopsis>
          <para>Returns a set theoretic union of X and Y (X and Y are vectors pretending to be sets)</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

    <sect1 id="genius-gel-function-list-miscellaneous">
      <title>Miscellaneous</title>
      <variablelist>
        <varlistentry id="gel-function-ASCIIToString">
         <term>ASCIIToString</term>
         <listitem>
          <synopsis>ASCIIToString (vec)</synopsis>
          <para>Convert a vector of ASCII values to a string</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-AlphabetToString">
         <term>AlphabetToString</term>
         <listitem>
          <synopsis>AlphabetToString (vec,alphabet)</synopsis>
          <para>Convert a vector of 0-based alphabet values (positions in the alphabet string) to a string</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-StringToASCII">
         <term>StringToASCII</term>
         <listitem>
          <synopsis>StringToASCII (str)</synopsis>
          <para>Convert a string to a vector of ASCII values</para>
         </listitem>
        </varlistentry>

        <varlistentry id="gel-function-StringToAlphabet">
         <term>StringToAlphabet</term>
         <listitem>
          <synopsis>StringToAlphabet (str,alphabet)</synopsis>
          <para>Convert a string to a vector of 0-based alphabet values (positions in the alphabet string), -1's for unknown letters</para>
         </listitem>
        </varlistentry>

      </variablelist>
    </sect1>

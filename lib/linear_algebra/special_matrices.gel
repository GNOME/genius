# Some Special Matrices

#FIXME:
#	companion matrix
#	higham test matrices (a whole slew of 'em)
#	hankel matrix (symmetric, constant across anti-diagonals)
# 		Take first column, last row (if no last row, take last row zeros)
#	HilbertMatrix(n)=HankelMatrix([1,1/2,1/3,...,1/n],[1/n,1/(n+1),...])
function InverseHilbertMatrix(n) = HilbertMatrix(n)^(-1)
#	magic square (exists for n != 2 -- I know how to make them for n odd)
#	pascal matrix
#	toeplitz matrix 
#		constant along diagonals
#		take first column, first row (or just first row, and then make hermitian, i.e., set first column = conjugate of first row)
#	vandermonde matrix
#	wilkinson (tridiagonal -- once off diagonals are all 1s, and the diagonal goes:
# 3 2 1 0 1 2 3 (say, for n=7)
# or
#1.5 .5 .5 1.5 (for n=4, say)

function VandermondeMatrix(v) =
  (
    n=rows(v);
    vandermonde=ones(n,1);
    for loop = 2 to n do
     (
      vandermonde=[vandermonde,v];  # adjoin new column
#FIXME: is there a way of multiplying two vectors componentwise?
      for loop2 = 1 to n do         # multiply!
        vandermonde@(loop2,loop)=vandermonde@(loop2,loop-1)*vandermonde@(loop2,loop);
    );
   vandermonde
  )
protect("VandermondeMatrix");

RosserMatrix = [611,196,-192,407,-8,-52,-49,29
196,899,113,-192,-71,-43,-8,-44
-192,113,899,196,61,49,8,52
407,-192,196,611,8,44,59,-23
-8,-71,61,8,411,-599,208,208
-52,-43,49,44,-599,411,208,208
-49,-8,8,59,208,208,99,-911
29,-44,52,-23,208,208,-911,99];
protect("RosserMatrix");

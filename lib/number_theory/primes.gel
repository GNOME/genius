# Primes and Primality

# Some algorithms come from Bressoud, Factorization and Primality
# Testing (see Genius bibliography FIXME: we don't have that yet)

#####################################
#### (Strong) Pseudoprime tests #####
#####################################
# FIXME: references and definitions!

# The ``pseudoprime test'':
# Returns true iff b^(n-1) == 1 (mod n).
# FIXME: Should we take |n| if n is negative?
# FIXME: is there a good name for an integer that is EITHER a pseudoprime OR a prime?
SetHelp("PseudoprimeTest","number_theory","Pseudoprime test, true iff b^(n-1) == 1 (mod n)");
function PseudoprimeTest(n,b) =
 (
  b^(|n|-1) == 1 mod |n|
 )
protect("PseudoprimeTest");

# An integer is said to be a PseudoPrime with base b iff it is:
# odd, composite, and satisfies b^(n-1) == 1 (mod n).
# We rearrange the order below to take advantage of lazy evaluation
# (IsOdd and PseudoprimeTest are MUCH faster than IsPrime)
function IsPseudoprime(n,b) =
 (
  IsOdd(n) and PseudoprimeTest(n,b) and not(IsPrime(n))
 )
SetHelp("IsPseudoprime","number_theory","If n is a pseudoprime base b but not a prime, that is if b^(n-1) == 1 mod n");
protect("IsPseudoprime");

function IsStrongPseudoprime(n,b) =
 (
  IsOdd(n) and gcd(n,b)==1 and StrongPseudoprimeTest(n,b) and not (IsPrime(n))
 )
SetHelp("IsStrongPseudoprime","number_theory","Test if n is a strong pseudoprime to base b but not a prime");
protect("IsStrongPseudoprime");

#######################################
############## Misc ###################
#######################################

SetHelp("LucasLehmer","number_theory","Test if Mp is a Mersenne prime using the Lucas-Lehmer test");
function LucasLehmer(p) = (
        if IsMatrix(p) then
                return ApplyOverMatrix(p, LucasLehmer)
	else if not IsPositiveInteger(p) then
		(error("LucasLehmer: argument not an integer larger than 0");bailout);
	if p==1 then return false
	else if p==2 then return true;
	S = 4;
	n = 1;
	Mp = (2^p) - 1;
	while n<p-1 do (
		S = ((S^2) - 2) % Mp;
		n = n+1
	);
	S == 0
);
protect("LucasLehmer")

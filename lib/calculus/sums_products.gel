# Sums and products

#calculate an infinite sum until the new terms stop making a difference
SetHelp("InfiniteSum","calculus","Try to calculate an infinite sum for a single parameter function");
function InfiniteSum (func, start, inc, epsilon) = (
	if not IsValue(start) or not IsValue(inc) then
		(error("InfiniteSum: start,inc arguments not values");bailout)
	else if not IsFunction(func) then
		(error("InfiniteSum: func argument not a function");bailout);
	s = 0.0;
	while 1 do (
		newsum = s + func(start);
		if |newsum-s|<epsilon then break;
		s = newsum;
		start = start + inc;
	);
	s
);
protect("InfiniteSum")

#calculate an infinite sum until the new terms stop making a difference
SetHelp("InfiniteSum2","calculus","Try to calculate an infinite sum for a double parameter function with func(arg,n)");
function InfiniteSum2(func,arg,start,inc,epsilon) = (
	if not IsValue(start) or not IsValue(inc) then
		(error("InfiniteSum2: start,inc arguments not values");bailout)
	else if not IsFunction(func) then
		(error("InfiniteSum2: func argument not a function");bailout);
	s = 0.0;
	while 1 do (
		newsum = s + func(arg,start);
		if |newsum-s|<epsilon then break;
		s = newsum;
		start = start + inc;
	);
	s
);
protect("InfiniteSum2")


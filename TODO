* Logfiles and/or save session
* Whack the readline nonsense in the GUI
* Check this strange thing of locals living on the global context somehow,
  try the testprogfamily.gel and look at vars and notice there are things
  with context > 0 on the toplevel context.   It's strange.  And I can't
  repro it now

* Implement max_nodes in the command line version
  * Implement MaxNodes parameter



This is somewhat out of date, though some of these may be fine ideas still.

---------------

*	Make mod arithmetic propagation into user functions possible

*	Gauss needs to be mod aware

*	Add flags to arguments to function to not-mod them where appropriate
	(for example I(n))

*	Check variable substitution of references, that could refer
	to freed data I think

*	Add continued fraction type of a loop

*	Check rational powers in mod mode to work correctly

*	Check modular arithmetic to be correct (such as: "expr mod n"),
        that is, when do we mod is the question.

*	Add extended gcd

*	Perhaps latex and troff mode should not be used on error output,
	only on toplevel.  Alternantively everything should be latex/troffized
	I suppose.  I like the first alternative more though.

*	Native polynomial operation

*	Add user argument checking functions for parameters

*	fix matrix exp function and add matrix ln function

*	matrix powers for rational numbers, and scalar^matrix (as matlab
	does it)

*	add try/catch operator for exceptions (need special exception
	variable like return_val)

*	interrupt internal mpwrap calculation (need new error type)

*	result display (optional) ... for matrix display and normal
	numbers ...

*	cleanup engine

*	make one line expression output more sane and make it work right
	for matricies

*	more calculator functions for use in plugins etc

*	add interface for using guile inside genius (or maybe not)

